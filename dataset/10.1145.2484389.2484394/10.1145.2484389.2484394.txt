Leakage-Resilient Certiﬁcateless Public Key Encryption∗
Hao Xiong
Department of
Computer Science
The University of Hong Kong
hxiong@cs.hku.hkTsz Hon Yuen†
Department of
Computer Science
The University of Hong Kong
thyuen@cs.hku.hkCong Zhang
Department of
Computer Science
The University of Hong Kong
czhang2@cs.hku.hk
S i uM i n gY i u
Department of
Computer Science
The University of Hong Kong
smyiu@cs.hku.hkYi-Jun He‡
Hong Kong R&D Centre
for Logistics and
Supply Chain Management
Enabling Technologies
ahe@lscm.hk
ABSTRACT
In certiﬁcateless public key encryption (CL-PKE), the Pri-
vate Key Generator (PKG) keeps a master secret key to gen-erate a partial private key corresponding to a user’s identity.Together with a secret value generated by the user, a fullprivate key can be constructed for decryption. Traditionalsecurity model for CL-PKE assumes that (i) both the mas-
ter secret key of the PKG and the full private key of the user
under attack are in absolute secrecy; and (ii) the attackercan only obtain either the target user’s secret value withoutany partialknowledge ofthepartial privatekeyorviceversa.However, the advancement of practical side-channel attacksenable attackers to obtain partial information of both keys
easily, making the above assumption invalid.
In this paper, we give the ﬁrstleakage-resilient CL-PKE.
We consider diﬀerent leakage conditions for Type I (third
party attackers) and Type II (honest-but-curious PKG) at-tackers, following the classiﬁcation in traditional CL-PKE.We give a concrete construction in the composite order bi-
linear group. We prove the security of our scheme in the
standard model, overcoming some technical diﬃculties inthe security proofs for both Type I and Type II attackers ofCL-PKE.
Categories and Subject Descriptors
E.3 [Data Encryption ]: Public key cryptosystems
∗Supported by the National Natural Science Foundation of
China under Grant No. 60970135 and 61170282
†SupportedbytheHKUSmall Project FundingunderGrant
No. 201109176192
‡Corresponding author
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted w ithout fee provided that copies are
not made or distributed for proﬁt or c ommercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, torepublish, to post on servers or to redist ribute to lists, requires prior speciﬁc
permission and/or a fee.AsiaPKC’13, May 8, 2013, Hangzhou, China.
Copyright 2013 ACM 978-1- 4503-2069-6/13/ 05 ...$15.00.Keywords
Certiﬁcateless public key encryption; leakage-resilient; dual
system encryption
1. INTRODUCTION
Identity-based encryption (IBE) [13] removes the need for
a public key infrastructure by setting a user’s public keyto be equal to their digital identity, such as email address.However, it requires a trusted third party Private Key Gen-erator (PKG) to generate the private keys for all identities.There are concerns that whether the PKG is trustworthy in
practice. This is known as the key escrow problem. There-
fore, Al-Riyami and Paterson proposed certiﬁcateless publickey encryption (CL-PKE) [2] to handle this drawback. CL-PKE combines the functionality of public key encryptionwith IBE. To encrypt a message using CL-PKE, the encryp-tor requires both the receiver’s identity and his public key.
On the other hand, to decrypt a ciphertext, a receiver re-
quires a full private key , which can be computed from the
partial private key corresponding to his identity (which is
the identity-based secret key given by the PKG) and thesecret value corresponding to the distributed public key. Anumber of CL-PKE schemes were proposed with diﬀerent
levels of security [12, 6, 3, 9, 4, 15].
The security model of CL-PKE, likes many other pub-
lic key cryptosystems, assumes the absolute secrecy of the
master secret key of the PKG for Type I attacker. Tra-ditional security model of CL-PKE allows the attacker to
obtain either the target user’s secret value without any par-
tial information of his partial private key (generated by thePKG) or vice versa. Recently, there are a number of diﬀer-ent side-channel attacks proposed, such as power and timinganalysis, which reveal partial information about the secretvalue of a cryptosystem. The security guarantee of tradi-
tional CL-PKE no longer holds if there is partial leakage
from the target user’s secret value, his partial secret key, hisfull private key and/or the master secret key of the PKG.
Leakage-resilient cryptography was proposed to capture
these side-channel attacks. In leakage-resilient cryptogra-phy, the attacker is allowed to ask a leakage oracle about
the output of an arbitrary function fusing the private key
13as the input. Diﬀerent restrictions are applied upon the
leakage function f. In this paper, we consider the relative
leakagemodel [1], which only allows fto output at most l
bits, where /lscriptis smaller than the size of the secret key.
Our Contributions. We propose the ﬁrst leakage-resilient
certiﬁcateless public key encryption (LR-CL-PKE) under
therelative leakage model. Similar to the security model of
traditional CL-PKE, we consider two types of adversaries:Type I and Type II. The Type I security model is designed
to protect against a third party attacker (i.e. anyone ex-
cept the legitimate receiver or the PKG) who is trying togain some information about a message from the ciphertext.The Type II security model is designed to protect againstan honest-but-curious PKG. We consider diﬀerent types ofleakage to the Type I and Type II adversary of the tradi-
tional CL-PKE model. We allow the leakage of the master
secret key of the PKG for the Type I adversary. It is similarto the master key leakage model of IBE [10, 16]. We alsoallow the leakage of the partial private key and the full pri-vate key for the Type I adversary. We only need to model
the leakage of the full private key for the Type II adversary,
since the adversary already knows the master secret key andhence the partial secret key.
Challenge. Our result is based on the leakage-resilient
identity-based encryption (LR-IBE) of [10]. There are a
few challenges when using the scheme of [10]. Firstly, theLR-IBE scheme [10] is only secure against chosen plaintextattack. However, most existing CL-PKEs are secure under
chosen ciphertext attack.
For the security proof, we face two main diﬃculties. First,
although we can prove the security against Type I attack
similartotheLR-IBE[10], wehavetohandlethespecialcasethat thepublic key of thechallenge identity may be replacedby the Type I attacker. In this case, it is diﬃcult to simulate
the challenge ciphertext without knowing the corresponding
secret value, using the ciphertext structure of LR-IBE in[10]. Second, we have to reveal the complete master secretkey of PKG to the Type II attacker (instead of just leakingit partially to the Type I attacker). We cannot apply theLR-IBE proof [10] here, since the LR-IBE proof allows the
leakage of semi-functional (SF) master secret key, while we
need to reveal the normal master secret key
1. Therefore, we
cannot directly apply the construction and proof method in
[10] to construct and prove our scheme.
Our Technique. We observe that we can use the leak-
age oracle of our LR-CL-PKE to simulate the decryption
oracle, by setting the leakage function as the decryption al-
gorithm. Since the leakage oracle is only allowed before the
challenge phase of the security game, our security model isnon-adaptive chosen ciphertext attack (CCA1) model. Weanalyse that we can model for the weak Type I and weakType II adversary according to the classiﬁcation by Dent [8].
For the security proof, we ﬁrstly introduce an extra proof
of knowledge of the secret value in the public key. Beforethe encryption to a new public key, the encryptor shouldcheck the validity of the public key by verifying this proofof knowledge. This method is inspired by the original CL-PKE security model of [2], which requires the attacker to
1Otherwise, the attacker can distinguish truly SF and nom-
inally SF when given the complete master secret key. The
deﬁnition of semi-functionality follows from [10], and will beformally deﬁned in §4.3.replace old public key with validpublic key. In most exist-
ing CL-PKE schemes, all public keys are valid and hence
such checking is not needed. However, we have to handlethe invalid public keys replaced by the attacker in the se-curity proof. Therefore, we can apply the idea of validitychecking of the public key in our construction. The Type Iattacker can only replace the public key with a valid proof of
knowledge. Then the simulator can extract the related se-
cret value from the proof of knowledge in the security proof,and hence can simulate the challenge ciphertext correctly.
For Type II attacker, we shift the semi-functionality from
the master secret key to the secret value used to setup the
public key. Therefore, the master secret key is always nor-
mal and can be given to the Type II attacker. For the secret
value, we have to show the transformation from normal tosemi-functional, without aﬀecting the structure of the chal-lenge ciphertext of the LR-IBE [10].
2. BACKGROUND
Weusethenotation negl(·)torefer tosome negligible func-
tion. We use PPT for probabilistic polynomial time.
Composite Order Bilinear Groups. LetG(1λ)b ea
generator of composite order bilinear groups, which out-
puts (N=p1p2p3,G,GT,ˆe), where p1,p2,p3are distinct
λ-bit primes, GandGTare cyclic groups of order N,a n d
ˆe:G×G→GTis a bilinear map such that ∀g,h∈Gand
a,b∈ZN,ˆe(ga,hb)=ˆe(g,h)ab.
Denote Gpias the subgroup of order piinGfori∈[1,3]
and denote gias its generator. Note that for all hi∈Gpi
andhj∈Gpj,i fi/negationslash=j,ˆe(hi,hj)=1 .D e n o t e Gp1p2as the
subgroup of order p1p2inG. For all T∈Gp1p2,Tcan be
written uniquely as the product of an element of Gp1and
an element of Gp2. We refer to these elements as the “ Gp1
part ofT”andthe“ Gp2part ofT”respectively. We deﬁne
Gp1p3andG=Gp1p2p3similarly.
Intractability Assumptions. We use the following as-
s u m p t i o n si nt h i sp a p e r .
•Assumption 1. [11] Given ( N=p1p2p3,G,GT,ˆe),g1∈
Gp1,g3∈Gp3andT, no PPT adversary can decide if
T∈Gp1p2orGp1with non-negligible probability.
•Assumption 2. [11] Given ( N=p1p2p3,G,GT,ˆe),g1,g3,
gz
1gν
2,gμ
1gρ
3andT, for some unknowns z,ν,μ,ρ ∈ZN,a n d
giare generators of Gpifori=1,2,3, no PPT adversary
can decide if T∈Gp1p3orGwith non-negligible proba-
bility.
•Assumption 3. Given (N=p1p2p3,G,GT,ˆe),g1,g2,g3,
gα
1gν
2,gz
1gμ
2andT, for some unknowns α,ν,μ,z ∈ZN,a n d
giare generators of Gpifori=1,2,3, no PPT adversary
can decide if T=gαz
1orTR←Gp1with non-negligible
probability.
Note that our assumption 3 is slightly diﬀerent from the
assumption 3 of [11], by changing the challenge term from
the group GTto the group G. We can show that our as-
sumption 3 holds in the generic group model if ﬁnding anon-trivial factor of the group order is hard as in [11]. We
omit the details here.
Vector Notation. We will use angle brackets /angbracketleft·,·,·/angbracketrightto
denote vectors and parentheses ( ·,·,·) to denote collections
14of elements of diﬀerent types. The dot product of vectors is
denoted by ·and component-wise multiplication is denoted
by∗. Deﬁne the exponentiation for vectors as follows: For
g∈G,/vector u=/angbracketleftu1,u2,...,u n/angbracketright∈Gn,a∈ZNand/vectorb=/angbracketleftb1,
b2,...,b n/angbracketright∈ZN, we deﬁne
g/vectorb:=/angbracketleftgb1,gb2,...,gbn/angbracketright,/vectorua:=/angbracketleftua
1,ua2,...,uan/angbracketright.
The resulting terms are elements of Gn. For the bilinear
group G, we deﬁne a pairing operation in Gn:F o r/vector u=
/angbracketleftu1,...,u n/angbracketright∈Gnand/vector v=/angbracketleftv1,...,v n/angbracketright∈Gn, the pairing is
ˆen(/vectorv,/vectoru)=n/productdisplay
i=1ˆe(vi,ui)∈GT.
Non-Interactive Zero Knowledge (NIZK) Proof Sys-
tem.For a language Lwith witness relation RL, the proof
system is a triplet of algorithms ( CRSGen, P, V ):
CRSGen: on input 1λ, outputs a common reference string
crs.
P: on input crs,xandw, outputs a proof πif (x,w)∈RL.
V: on input crs,xandπ, outputs accept or reject.
A NIZK proof system should have completeness, sound-
nessandzero knowledge .
3. SECURITY MODEL FOR CL-PKE
We use the notion of CL-PKE by Al-Riyami and Paterson
[2]. A certiﬁcateless public-key encryption scheme is deﬁned
by seven PPT algorithms:
•Setup(1λ): On input a security parameter 1λ,t h eP K G
generates his master secret key mskand master public key
mpk, which includes the identity space Iand the message
spaceM.
•Extract-Partial-Private-Key (mpk,msk,ID): On input
mpk,mskand an identity ID∈I, the PKG generates the
partial private key dIDto the user ID.
•Set-Secret-Value( mpk,ID): On input mpkand an iden-
tityID∈I, the user outputs a secret value wID.
•Set-Private-Key( mpk,dID,wID): On input mpk,dID,wID,
the user outputs a full private key skID.
•Set-Public-Key( mpk,wID): On input mpk,wID, the user
outputs his public key pkID.
•Encrypt( mpk,pkID,M): Oninput mpk,pkIDof user IDand
a message M∈M, it outputs a ciphertext C.
•Decrypt( mpk,skID,C): On input mpk, the full private key
skIDof user IDand a ciphertext C, it outputs a message
Mor⊥for invalid ciphertext.
3.1 Chosen Plaintext Security
We now deﬁne the security model for the LR-CL-PKE
scheme based on the IND-CPA security. The main idea of
our new security game is to additionally allow the leakage of/lscript
mskbits of master secret key, and /lscriptskbits of each user’s full
secret key, where /lscriptmskand/lscriptskare parameters of the game.
We ﬁrst deﬁne a list of oracles that the attacker can have
access to. With a Createquery, the attacker asks the chal-
lenger to create a public key, a partial private key and a fullprivate key for an identity. The attacker receives a unique
handle-reference to the generated keys, so that the attacker
can refer to it later and either apply a leakage function toit and/or ask for the entire key. The original master secretkey created in the Setupphase gets a handle of 0. The
challenger keeps a counter for the handle Hand a set Υ
that holds tuples of handles, identities, public keys, partial
private keys, full private keys, and the number of leaked bits
from each key so far. Using a handle, the attacker asks foraLeakquery on either the master secret key, partial private
key or the full private key. Each such query updates thenumber of bits leaked. The remaining oracle queries followthe IND-CPA security for CL-PKE, using the handle as the
reference. The oracles are described as follows:
Create: On input an identity ID, the challenger Crunsd
ID←
Extract-Partial-Private-Key (mpk,msk,ID),skID←
Set-Private-Key( mpk,dID,wID),wID←Set-Secret-
Value(mpk,ID), and pkID←Set-Public-Key( mpk,wID).
It adds the tuple ( H+1,ID,pkID,dID,skID,0) to the set
Υ and returns H+ 1. It updates the handle counter
H←H+1.
Extract Partial Private Key : On input a handle h,Cscans Υ
toﬁndtherequestedentryandreturnsthecorresponding
partial private key dID.
Extract Private Key : On input a handle h,Cscans Υ to
ﬁnd the requested entry and returns the corresponding
full private key skID. If the user identity of this entry is
the selected challenge identity, then the challenger will
reject this query. It is unreasonable to expect the Cto
return the private key if the corresponding public key is
replaced.
Request Public Key : On input a handle h,Cscans Υ to ﬁnd
therequested entryand returnsthecorresponding public
keypkID.
Replace Public Key :Acan repeatedly replace the public key
for any identity IDwith any value pk/primeof its choice. Conly
replaces with valid pk/prime.CrunsdID←Extract-Partial-
Private-Key( mpk,msk,ID), and adds the tuple ( H+1,
ID,pk/prime,dID,⊥, 0) to the set Υ and returns H+1 . I t
updates the handle counter H←H+1.
We insist that Acannot both replace the public key for
the challenge identity ID∗before the challenge phase and
extract the partial key for ID∗in some phase: this would
enableAto receive a challenge ciphertext under a public
key for which it would compute the private key.
Leak Private Keys : On input hand a polynomial-time com-
putable function fof constant output size, Cscans Υ
to ﬁnd the requested entry ( h,ID,pkID,dID,skID,LID). It
checks if LID+|f(dID,skID)|≤/lscriptsk. If this is true, it re-
sponds with f(dID,skID) and updates LID←LID+|f(dID,
skID)|in Υ. Otherwise, it returns ⊥.
Note that if the public key of the IDis replaced by A,
then skID=/epsilon1.
Leak Master Key : Initially, Cmaintains a counter Lmskini-
tially set as 0. On input a polynomial-time computable
function fof constant output size, Cwill check if Lmsk+
f(msk)≤/lscriptmsk.I fs oCwill return f(msk) to the attacker
and setLmsk=Lmsk+|f(msk)|.O t h e r w i s e Creturns⊥.
We will specify two types of adversary as follows:
Type I Adversary : Such an adversary AIdoes not have
access to the msk.H o w e v e r AImay create handles, re-
15quest public keys and replace public keys, extract partial
private key and private keys, make leak query on private
keys, and make leak query on the msk.W em a k es e v e r a l
restrictions on such a AIadversary:
•AIcannot extract the private key for ID∗at any point.
•AIcannot both replace the public key for the challenge
identity ID∗before the challenge phase and extract the
partial private key for ID∗in some phase.
Type II Adversary : Such an adversary AIIdoes haveac-
cess to the msk, but cannot replace any public key of en-
tities.AIIcan compute partial private keys for itself by
using the msk. It can create handles, make leak query
on full private keys and extract full private keys. The
restrictions on this type of adversary are:
•AIIcannot extract the private key for ID∗at any point.
•AIIcannot replace public key at any point.
We say that a LR-CL-PKE scheme is semantically secure
against an adaptive chosen plaintext attack if no polynomi-ally bounded adversary Aof Type I or Type II has a non-
negligible advantage against the challenger in the following
game LeakCPA :
•Setup: The challenger Ctakes the security parameters
1
λand runs ( msk,mpk)←Setup(1λ). It gives mpktoA.
IfAis of Type I, then the challenger keeps the mskto
itself. If Ais of Type II, Cgives msktoA.
•Phase 1: Aissues a sequence of requests which can be
adaptive subject to the restrictions deﬁned above.
•Challenge Phase: OnceAdecides that Phase 1 is over,
it outputs the challenge identity ID∗∈Iand two equal
length plaintext M∗
0,M∗
1∈M.Cscans Υ to ﬁnd the
requested entry ( ·,ID∗,pkID,·,·,·). If such entry does not
exist,Cruns the Create(ID∗) query by itself ﬁrst. Cthen
picksarandombit b∈{0,1}andcomputes C∗←Encrypt
(mpk,pkID,M∗
b). It returns C∗toA.
•Phase 2: Aissues a second sequence of request as in
Phase 1, again subjected to the rules deﬁned above. Fur-thermore, no leak query is allowed.
•Guess: Finally,Aoutputs a guess b
/prime∈{0,1}.
The adversary wins the game if b=b/prime. We deﬁne the
advantage of Ain this game as AdvA(1λ,/lscriptmsk,/lscriptsk)=|Pr[b=
b/prime]−1
2|, where the probability is over all random bits used
by the challenger and the attacker.
Definition 1.A CL-PKE is (/lscriptmsk,/lscriptsk)-leakage Type I se-
cure if for all PPT Type I adversaries A,AdvA(1λ,/lscriptmsk,/lscriptsk)
≤negl(λ).
Definition 2.A CL-PKE is /lscriptsk-leakage Type II secure if
for all PPT Type II adversaries A,AdvA(1λ,/lscriptsk)≤negl(λ).
3.2 CCA1 Security of LR-CL-PKE
Thenon-adaptivechosen-ciphertextattack(CCA1), some-
times called the lunchtime attack, provides the decryptionoracle to the attacker until the challenge ciphertext is asked.We show that our LR-CL-PKE model can actually support
CCA1 security.Observe that the leakage oracle can be viewed as a func-
tion of the partial privatekey and/or full private key. There-
fore, the decrypt algorithm can be viewed as a special caseof the leakage oracle. Since no leakage is allowed after thechallenge ciphertext is given, our model achieves CCA1 se-curity. Furthermore, the number of decrypt queries is upperbounded by the leakage size /lscript
skdivided by the size of the
message. The leakage bound /lscriptskcan be increased by in-
creasing the size of the private key, but with the tradeoﬀ ofextra complexity during decryption.
We note that our current model limits the adversary to
make only a constant number of decryption queries. In par-
ticular, the number of decryption queries has to be smaller
than the size of the secret key. However, if we consider ex-
tending it to the continual leakage model (will be discussedin§4.4), then this limitation only applies to queries among
updates. In the long run, it allows a larger number of de-cryption queries in the continual leakage model.
Dent [8] summarized diﬀerent types of adversary for CL-
PKE. Our CCA1 security model ﬁts the the deﬁnition ofWeak Type Ia and Weak Type II adversaries. It is because
we only forbid the leakage (and hence decryption) using the
full private key of the replaced public key. Therefore, we donot support the strong decrypt oracle in [8].
4. OUR CONSTRUCTION
We give the construction of the LR-CL-PKE in this sec-
tion. The construction is based on the LR-IBE in [10].
4.1 Intuition
The mskof the scheme is gα
1and the mpkis ˆe(v1,g1)αif
no leakage is allowed. To allow leakage, the PKG adds g/vector xto
thempk,w h e r e/vector x∈Zn
N.T h e mskis modiﬁed to the form:
msk=(v/vector y
1,gα
1g/vector x·/vector y
1),
where/vector y∈Zn
N(we omit other related parameters for sim-
plicity.) Similarly, the partial private key for the identity ID
has the form:
dID=(v/vector z
1,gα
1(uID
1h1)rg/vector x·/vector z
1,vr
1),
where/vector z∈Zn
N,r∈ZN. To add the secret value βof the
user, he sets his public key as
pk=ˆe(v1,g1)αβ.
The full private key has the structure
skID=(v/vector w
1,gαβ
1(uID
1h1)tg/vector x·/vector w
1,vt
1),
where/vector w∈Zn
N,t∈ZN.W es e tt h ef u l lp r i v a t ek e yt oh a v e
a similar structure as the identity-based secret key in [10].
By the symmetry of αandβin the full private key, we can
change to put the hard problem instance into gβinstead of
gαfor Type II adversary during security game. This helps
us to deal with the second challenge of the security proof
discussed in §1. To solve the ﬁrst problem of the security
proof discussedin §1, wehavetoadditionallyincludeaNIZK
proof of βsuch that it is equal to the discrete logarithm of
pkto the base of ˆ e(v1,g1)α. Validity checking of the public
key is also used some CL-PKE schemes (e.g. [2, 9, 7]). Inthe securityproof, we use theknowledge extractor toextractβ, which helps to construct the challenge ciphertext for the
replaced public key against Type I adversary.
16Our security proof also has another discrepancy from the
security proof of LR-IBE in [10]. In the security proof of
[10], each handleonly pointstooneidentity-basedsecretkey.Therefore they only need to switch the key from normal tosemi-functional in each handle
2. Now, in our security proof
of CL-PKE, each handle points to a partial private key anda full private key. We have to switch the full private key to
semi-functional ﬁrst and then switch the partial private key.
For the replaced public key, the corresponding full privatekey is not known to the simulator, and hence we have tocreate a separate handle and consider the semi-functionaltransformation separately.
4.2 Concrete Construction
Denote pk1=ˆe(v1,g1)αβand pk2=ˆe(v1,g1)α.L e tΠ=
(CRSGen,P,V) be a NIZK proof system for the language
L={(β):pkβ
2=pk1}. Our LR-CL-PKE is as follows:
•Setup(1λ): It generates a composite order bilinear group
(N=p1p2p3,G,GT,ˆe)←G(1λ). Assume that the identi-
ties of users are elements of ZNandn≥2 is an integer.
The algorithm picks random elements g1,u1,h1,v1∈Gp1
andg3∈Gp3. It runs crs←CRSGen(1λ) and picks 2 n+2
random exponents /angbracketleftα,x1,...,x n,r,y1,...,y n/angbracketright∈Z2n+2
N,a
random vector /vector ρ=/angbracketleftρ1,...,ρ n+3/angbracketright∈Zn+3
N. It outputs:
mpk=(N,G,GT,ˆe,ˆe(g1,v1)α,g1,gx1
1,...gxn
1,u1,h1,v1,
g3,crs),
msk:= (/vectorK,K1,K2,K3)
=/parenleftbigg
/angbracketleftvy1
1,...,vyn
1/angbracketright,gα
1h−r
1n/productdisplay
i=1g−xiyi
1,vr
1,ur
1/parenrightbigg
∗g/vector ρ
3.
•Extract-Partial-Private-Key (mpk,msk,ID): The PKG
picksn+1 random exponents /angbracketleftr/prime,z1,...,z n/angbracketright∈Zn+1
Nand
av e c t o r /vectorρ/prime∈Zn+2
Nand sets the partial private key as:
dID:= (/vectorD,D1,D2)
=(/vectorK,K1,K2)∗
/parenleftBig
/angbracketleftvz1
1,...,vzn
1/angbracketright,(K3)−I(uID1h1)r/primen/productdisplay
i=1g−xizi
1,vr/prime
1/parenrightBig
∗g/vectorρ/prime
3.
TheGp1part of dIDc a nb ev i e w e da s( /angbracketleftvz/prime
1
1,...,vz/prime
n
1/angbracketright,
gα
1(uID
1h1)−r”/producttext
ig−xiz/prime
i
1,vr”
1)f o rs o m e z/prime
1,...z/prime
n,r”∈ZN.
•Set-Secret-Value( mpk,ID): The user picks a random
β∈ZNand sets the secret value wID=β.
•Set-Public-Key( mpk,wID): The user calculates the pub-
lickey pk:= (pk1=ˆe(g1,v1)αβ,π), where π←P(crs,(pk1,
ˆe(g1,v1)α),β) is a NIZK proof of knowing βsuch that it
is the discrete logarithm of pk1to the base ˆ e(g1,v1)α.
•Set-Private-Key( mpk,dID,wID): The user randomly se-
lects/vector w=/angbracketleftw1,...,w n/angbracketright∈Zn
N,/vectorρ/prime/prime∈Zn+2
Nandt∈ZN.
The user sets the full private key as:
skID:= (/vectorS,S1,S2)
=(/vectorD,D1,D2)β∗
/parenleftbigg
/angbracketleftvw1
1,...,vwn
1/angbracketright,(uID
1h1)−tn/productdisplay
i=1g−xiwi
1,vt
1/parenrightbigg
∗g/vectorρ/prime/prime
3.
2The semi-functional property will be deﬁned in §4.3TheGp1part of skIDcan be viewed as ( /angbracketleftvw/prime
1
1,...,vw/prime
n
1/angbracketright,
gαβ
1(uID
1h1)−t/prime/producttext
ig−xiw/prime
i
1,vt/prime
1)f o rs o m e w/prime
1,...w/prime
n,t/prime∈ZN.
•Encrypt( mpk,pkID,M): Before encryption, it checks if π
is a valid proof for pk1.I fi ti sv a l i d ,i ts e l e c t sar a n d o m
numbers∈ZNand outputs the ciphertext as:
C:= (C0,/vectorC,C1,C2)
=(M·ˆe(v1,g1)αβs,/angbracketleftgx1s
1,...,gxns
1/angbracketright,vs
1,(uID
1h1)s).
•Decrypt( mpk,skID,C): It outputs the plaintext as:
M=C0
ˆen(/vectorC,/vectorS)·ˆe(C1,S1)·ˆe(C2,S2).
4.3 Security
To prove the security of our scheme, we use the dual
system encryption technique [14, 11, 10] to deﬁne semi-
functional (SF) keys and ciphertexts.
4.3.1 Dual System CL-PKE
We now deﬁne dual system CL-PKE as an abstraction.
Setup-SF(1λ)→(/tildewidestmsk,mpk). It works in a similar way to
Setupbut outputs a semi-functional (SF) master secret
key/tildewidestmskand a master public key.
Extract-Partial-Private-Key-SF (mpk,msk,ID)→/tildewiderdID.I t
worksinasimilar wayto Extract-Partial-Private-Key
but outputs a SF partial private key /tildewiderdID.
Set-Private-Key-SF (mpk,dID,wID)→/tildewidestskID.I t w o r k s i n a
similar way to Set-Private-Key but outputs an SF full
private key /tildewidestskID.
EncryptSF( mpk,pkID,M)→/tildewideC. It works in a similar way to
Encrypt but outputs an SF ciphertext, /tildewideC.
Note that the above algorithms need not be polynomial
time computable , in contrast to other algorithms. We re-
quire that an SF full private key can decrypt normal cipher-text correctly, and a normal full private key can decrypt SFciphertext correctly. However, an SF full private key can-
not decrypt an SF ciphertext. In addition, if we use an SF
master secret key to run Extract-Partial-Private-Key ,i t
will output an SF partial private key; and if we use an SF
partial private key to run Set-Private-Key , it will output
an SF full private key.
4.3.2 Semi-functionality Construction
In our concrete construction, all ciphertexts and secret
keys are normal,w h e r eb y normalwe mean that they do not
haveGp2parts. On the other hand, an SF key or ciphertext
hasGp2parts. Denote g2as a generator of Gp2. Our dual
system CL-PKE algorithms are as follows:
Setup-SF(1λ). It calls Setup(1λ)t og e t mpkand a normal
msk=(/vectorK,K1,K2,K3). It picks /vector ι$←Zn
N,ι1,ι2,ι3$←Z3N,
and outputs /tildewidestmsk=(/vectorK∗g/vector ι
2,K1·gι1
2,K2·gι2
2,K3·gι3
2).
Extract-Partial-Private-Key-SF (mpk,msk,ID). It calls
Extract-Partial-Private-Key (mpk,msk,ID)t og e t dID
=(/vectorD,D1,D2). Then it picks /vector η$←Zn
N,η1,η2$←Z2N,a n d
outputs /tildewiderdID=(/vectorD∗g/vector η
2,D1·gη1
2,D2·gη2
2).
Set-Private-Key-SF (mpk,dID,wID). It calls Set-Private-
Key(mpk,dID,wID)t og e tsk ID=(/vectorS,S1,S2). Then it picks
17/vectorθ$←Zn
N,θ1,θ2$←Z2Nand outputs /tildewidestskID=(/vectorS∗g/vectorθ
2,S1·
gθ1
2,S2·gθ2
2).
EncryptSF( mpk,pkID,M). It calls Encrypt( M,mpk,pkID)t o
getC.T h e ni t /vectorδ$←Zn
N,δ1,δ2$←−Z2N, and outputs
/tildewideC=/parenleftBig
C0,/vectorC∗g/vectorδ
2,C1·gδ1
2,C2·gδ2
2/parenrightBig
.
We call the terms ( /vectorθ,θ1,θ2), (/vectorδ,δ1,δ2) the SF parameters
of the full private key and the ciphertext, respectively. If an
SF full private key is used to decrypt an SF ciphertext, it is
hindered by extra element ˆ e(g2,g2)/vectorθ·/vectorδ+θ1δ1+θ2δ2inGT.
Nominally Semi-functional.
Following previous dual system encryption schemes [14,
11, 10], we call a full private key nominally semi-functional
(NSF) if /vectorθ·/vectorδ+θ1δ1+θ2δ2=0 m o d p2,s i n c et h e Decrypt
still succeeds in this case. Otherwise, the key is truly semi-
functional. More precisely, the NSF full private key can
correctly decrypt the SF ciphertext.
We further deﬁne the NSF condition for SF partial pri-
vate key /tildewiderdIDand SF master secret key /tildewidestmsk.W es a yt h a t /tildewiderdID
is NSFif sk/prime
ID←Set-Private-Key (mpk,/tildewiderdID,wID)isNSF.W e
saythat /tildewidestmskisNSFif d/prime
ID←Extract-Partial-Private-Key
(mpk,/tildewidestmsk,ID)i sN S F .
4.3.3 Hybrid Game Deﬁnitions
We now deﬁne several hybrid games which will ensure
leakage-resilient property in the security proof. The main
part of the proof is to show statistical indistinguishabilityamong these games. The output of each game consists ofthe view of the adversary Aas well as a bit bchosen by
the challenger Crepresenting its choice of which message
M
∗
0,M∗
1to encrypt. Denote Qas the maximum number of
Createand Replace Public Key queries during the game. We
describe the games in details below.
GameReal: This is the original“ LeakCPA ”game.
Game 0: Same as the GameReal , except that the chal-
lenge ciphertext is an SF ciphertext of the message M∗
b.
Gamek:In Game k,f o rt h eﬁ r s t k-thCreateorReplace
Public Key queries, the challenger Ccreates:
•(for Createquery) the SF partial private key and SF
full private key;
•(for Replace Public Key query) the SF partial private
key;
Cstores it in Υ and sends a handle referring to the key
to the adversary, and the remaining queries will create
normalpartialprivatekeyand/ornormalfullprivatekey.
The challenge ciphertext is still SF.
GameMSK: Same as GameQ, except that the master
secret key stored and used by Cis SF. Therefore all Leak
Master Key queries will also use theSF master secret key.
GameFinal: Same as GameMSK , except that instead of
encrypting the challenge message M∗
b,Cjust encrypts a
random message Mran∈M.T h u s , t h e v i e w o f Ain
GameFinal is independent of the challenger’s bit b.
Theorem 1.Under the assumptions 1, 2, 3 and for /lscriptmsk
=/lscriptsk=(n−2c−1)logp2,w h e r ecis a ﬁxed positive constant,
our CL-PKE scheme is (/lscriptmsk,/lscriptsk)-leakage secure against Type
I adversary.Proof. We will build several games to simulate diﬀerent
cases and show that these games are indistinguishable underthe assumptions. First, we give a useful lemma from [5].
Lemma 1.Letm∈N,m≥3,a n dl e t pbe a prime. Let
/vectorδ$←Zm
p,/vectorτ$←Zmp,a n dl e t /vectorτ/primebe chosen uniformly randomly
from the set of vectors in Zmpwhich are orthogonal to /vectorδun-
der the dot product modulo p.L e tf:Zmp→Wbe some
function. Then: dist/parenleftBig
(/vectorδ,f(/vectorτ/prime)),(/vectorδ,f(/vector τ))/parenrightBig
≤/epsilon1,a sl o n ga s
|W|≤4·(1−1
p)·pm−2·/epsilon12.
This lemma allows us to set /lscriptmsk=/lscriptsk=(n−2c−1)logp2
for our construction (we will set m=n+1),where cis any
ﬁxed positive constant (so that /epsilon1:=p−c
2is negligible).
Lemma 2.If the assumption 1 holds, no PPT adversary
can distinguish GameReal andGame 0 .
Proof. We will build a PPT simulator Bthat breaks as-
sumption 1 with the help of a PPT attacker Awho can dis-
tinguish the GameReal andGame 0 with non-negligible
advantage. Binitially receives ( N,G,GT,ˆe,g1,X3,T)f r o m
the problem instance. Bsimulates the GameReal or the
Game 0 withAin the following way:
Setup:Bruns Setup(1λ) honestly, except using the pairing
settings ( N,G,GT,ˆe), picking a,b,d∈RZNand setting
g1=g, g 3=X3,u1=ga,h1=gb,v1=gd.
Bgives the mpktoAand keeps the msk.
Oracle Query: Bcan answer all of the adversary’s queries,
because Bknows mskand hence knows the full private
key for non-replaced public key. Badditionally stores
the secret value used for each user.
Challenge: AgivesBtwomessages M∗
0andM∗
1anda chal-
lenge identity ID∗.Bsearches Υ for the corresponding
public key ( pk1,π)o fID∗with the largest handle (It may
be replaced by A). Denote pk1=ˆe(g1,v1)αβ.Bknows
βif the public key is not replaced. Otherwise, Buses
the knowledge extractor of the NIZK proof to extract β
fromπ.Bﬂips a coin b$←{0,1}and outputs:
C∗=(C∗
0=M·ˆe(vβ
1,T)α,/vectorC∗=/angbracketleftTx1,...,Txn/angbracketright,
C∗
1=Td,C∗
2=TaID∗+b).
IfT=Y1, the challenge ciphertext is normal since it has
noGp2part, and Bhas correctly simulated the GameReal .
IfT=Y1Y2, this implicitly sets /vectorδ=/angbracketleftx1,...,x n/angbracketright,δ1=
dandδ2=aID∗+b. Obviously, the vector /vectorδ,δ1andδ2
are properly distributed in the adversary A’s view since the
x1,...,x n,d,a,bare only seen in modulo p1inmpkbut not
in modulo p2.T h u s ,i n A’s view, they are random modulo
p2by Chinese Remainder Theorem. This means that Bhas
properly simulated the Game 0 .
Hence, if Ahas a non-negligible diﬀerence in the advan-
tage of Game 0 andGameReal ,Bcan use it to break
assumption 1 with non-negligible probability.
Lemma 3.If the assumption 2 holds and /lscriptsk≤(n−2c−
1)logp2, no PPT adversary can distinguish Gamekand
Gamek+1.
Proof. In this proof, we introduce an additional game,
called AltGame k.I ti st h es a m ea s Gamekexcept that
18if thek-th query is the CreateOracle, the partial private key
generated is normal instead of SF (while the full private key
is still SF). Then we give the following lemma.
Lemma 4.If the assumption 2 holds and /lscriptsk≤(n−2c−
1)logp2, no PPT adversary can distinguish Gamekand
AltGame k+1.
Proof. If there exists a PPT adversary Athat can dis-
tinguish GamekandAltGame k+1 with non-negligible
probability, then we can build a simulator Bto break as-
sumption2. Breceivestheprobleminstance( N,G,GT,ˆe,g1,
g3,gz
1gν
2,gμ
2gρ
3) and a challenge term T, which is either equal
togω
1gσ
3orgω
1gκ
2gσ
3.Bsimulates as follows:
Setup: same as the Setup phase of the proof of Lemma 2.
Oracle Query SinceBknowsα,xi,yi,rwhen generating
msk,Bcan answer all queries. For the j-th query to the
CreateorReplace Public Key oracle for the identity IDj:
•If thej-th query is to the Createoracle,Bcan generate
normaldIDusing msk(w hi c hca nbel ea k edo rextra cted
later).Bthen runs β←Set-Secret-Value (mpk,IDj)
andpkID←Set-Public-Key (mpk,β).Bpicks/angbracketleftw1,w2,
...,w n,t/angbracketright$←Zn+1
N, and a random vector /vector ρ$←Zn+2
N.
−Ifj≤k,Bcomputes the full private key skID:
skID=/angbracketleftBig
/angbracketleftvw1
1,...,vwn
1/angbracketright,gαβ(uIDj
1h1)−tn/productdisplay
i=1g1−xiwi,
vt
1/angbracketrightBig
∗g/vector ρ
3.
−Ifj>k+1,Bpicks a random vectors /vector γ$←Zn+2
N.I t
computes the full private key skID:
skID=/angbracketleftBig
/angbracketleftvw1
1,...,vwn
1/angbracketright,gαβ(uIDj
1h1)−tn/productdisplay
i=1g1−xiwi,
vt
1/angbracketrightBig
∗(gμ
2gρ
3)/vector γ∗g/vector ρ
3.
−Ifj=k+1,Buses the challenge term Tto generate
the full private key skID:
skID=/angbracketleftBig
/angbracketleftTdw1,...,Tdwn/angbracketright,T−(aIDj+b)n/productdisplay
i=1T−xiwi
∗gαβ,Td/angbracketrightBig
∗g/vector ρ
3.
IfT=gω
1gσ
3, there is no Gp2part and Bhas formed
a properly distributed normal full secret key. If
T=gω
1gκ
2gσ
3, this key is SF with the parameter: /vectorθ=
/angbracketleftκdw1,...,κdw n/angbracketright,θ1=−κ(aIDk+1+b+/summationtextn
i=1xiwi),
θ2=κd.S i n c ea l lt e r m s w1,...,w n,x1,...,x n,d,a,
bare only seen modulo p1in the public parameters,
they appear random modulo p2by the Chinese Re-
mainder Theorem. Therefore, Bhas formed a prop-
erly distributed SF full private key.
ThenBputs (H+1,IDj,pkID,dID,sk ID,0) to the set Υ,
returnsH+1 and updates H←H+1.
•If thej-th query is to the Replace Public Key oracle
withinputnewpublickey pk/prime,Bpicks/angbracketleftz1,z2,...,z n,r/angbracketright
$←Zn+1
N, and a random vector /vector ρ$←Zn+2
N.−Ifj≤k,Bcomputes the partial private key:
dID=/angbracketleftBig
/angbracketleftvz1
1,...,vzn
1/angbracketright,gα(uIDj
1h1)−rn/productdisplay
i=1g1−xizi,
vr
1/angbracketrightBig
∗g/vector ρ
3.
−Ifj>k+1 ,Bpicks a random vectors /vector γ$←Zn+2
N
and computes the partial private key:
dID=/angbracketleftBig
/angbracketleftvz1
1,...,vzn
1/angbracketright,gα(uIDj
1h1)−rn/productdisplay
i=1g1−xizi,
vr
1/angbracketrightBig
∗(gμ
2gρ
3)/vector γ∗g/vector ρ
3.
−Ifj=k+1,Buses the challenge term Tto generate
the partial private key:
dID=/angbracketleftBig
/angbracketleftTdz1,...,Tdzn/angbracketright,T−(aIDk+1+b)n/productdisplay
i=1T−xizi
∗gα,Td/angbracketrightBig
∗g/vector ρ
3,
IfT=gω
1gσ
3, there is no Gp2part and Bhas formed
a properly distributed normal partial secret key. IfT=g
ω
1gκ
2gσ
3, this key is SF with the parameter: /vector η=
/angbracketleftκdz1,...,κdz n/angbracketright,η1=−κ(aIDk+1+b+/summationtextni=1xizi),
η2=κd.A l lt e r m s z1,...,z n,x1,...,x n,d,a,bap-
pear random modulo p2by the Chinese Remainder
Theorem. Therefore, Bhas formed a properly dis-
tributed SF full private key.
Finally,Breturns the handle H+1toAand adds the
tuple (H+1,ID,pk/prime,dID,⊥,0) to Υ.
Challenge: Bgets two messages M∗
0andM∗
1and the chal-
lenge identity ID∗fromA. It ﬂips a coin b$←{0,1}.
Bsearches Υ for the corresponding public key ( pk1,π)
ofID∗with the largest handle (It may be replaced by
A). Denote pk1=ˆe(g1,v1)αβ∗.Bknowsβ∗if the public
key is not replaced. Otherwise, Buses the knowledge
extractor of the NIZK proof to extract β∗fromπ.T h e n
Bgenerates the SF ciphertext using gz
1gν
2from the as-
sumption:
C∗=(C∗
0=M·ˆe(vβ∗
1,gz
1gν
2)α,/vectorC∗=(gz
1gν
2)xi,
C∗
1=(gz
1gν
2)d,C∗
2=(gz
1gν
2)aID∗+b).
It is obvious that the ciphertext’s SF parameters are
/vectorδ=/angbracketleftνx1,...,νx n/angbracketright,δ1=νd,δ2=ν(aID∗+b). All terms
x1,...,x n,d,a,bseem random modulo p2as before, by
the Chinese Remainder Theorem, and the challenge ci-phertextiswell-distributedif ID
∗isnotequaltotheiden-
tity in the k+1-th handle.
Now consider the case that the k+1-thqueryisthe Create
oracle. Here, weclaimthatif ThasGp2term,thefullprivate
key of the k+1-thhandleis SFwith respect to C∗.W ec h e c k
the NSF property as follow:
/vectorθ·/vectorδ=κνdn/summationdisplay
i=1xiwimodp2,
θ1δ1=−κνd(aIDk+1+b+n/summationdisplay
i=1xiwi)m o dp2
θ2δ2=κνd(aID∗+b)m o dp2.
19Thus, if T=gω
1gκ
2gσ
3,Bsimulates the Gamei+1w h e n
ID∗/negationslash=IDk+1modp2.O t h e r w i s e , Bsimulates the Gamei.
Next consider the case that the k+1-thqueryisthe Re-
place Public Key oracle. Even if thepublickey of that handle
isreplaced, the Gp2ofthecorrespondingfullsecretkeyisthe
same as that of the corresponding partial secret key, since
Acannot re-randomize the Gp2part without aﬀecting the
Gp1part. We check the NSF property as follows:
/vectorθ·/vectorδ=/vector ηβ·/vectorδ=κνβdn/summationdisplay
i=1xizimodp2,
θ1δ1=ηβ
1δ1=−κνβd(aIDk+1+b+n/summationdisplay
i=1xizi)m o dp2
θ2δ2=ηβ
2δ2=κνβd(aID∗+b)m o dp2.
Thus, ifT=gω
1gκ
2gσ
3,Bsimulates the AltGame k+1when
ID∗/negationslash=IDk+1modp2.O t h e r w i s e , Bsimulates the Gamek.
No matter which type the k+ 1-th query belongs to, we
have to consider the following two special cases for NSF,
instead of truly SF for the k+1-th handle:
1.ID∗=IDk+1modp2and ID∗/negationslash=IDk+1modN.
2.ID∗=IDk+1modN.
For the ﬁrst case, Buses these identities to produce a non-
trivial factor of Nby computing ¯ a=gcd(ID∗−IDk+1,N).
It breaks the subgroup decision assumption, which implies
breaking assumption 1, 2, and 3.
For the second case, the k+ 1-th handle points to the
challenge identity ID∗.I n t h i s c a s e , Acannot extract the
full private key of ID∗. It is further divided into two sub-
cases:
a.Acan extract the partial private key and leak on the
full private key of ID∗.
b.Acan replace the public key of ID∗and leak on the
partial private key of ID∗.
We have the following lemma to show that NSF and truly
SF are indistinguishable.
Lemma 5.For the second case, the advantage of the ad-
verssary Achanges by a negligible amount if the k+1-th
handle for ID∗is changed from truly SF to NSF, where
/lscriptsk=(n−2c−1)logp2, for any ﬁxed positive constant c.
Proof. Suppose there exists a PPT adversary Awhose
advantage changes by /epsilon1from truly SF to NSF full/partial
private key of ID∗.U s i n gA, we construct a PPT algorithm
Bwhich can distinguish between the distribution ( /vectorδ,f(/vectorτ/prime))
and (/vectorδ,f(/vector τ)) from Lemma 1 with non-negligible probability
(wherem=n+1andp=p2), which yields a contradiction.
Bstarts by running the Setupalgorithm by itself and
givingAthempk.S i n c eBknows mskandg2∈Gp2,i tc a n
create normal and SF keys. Hence, it can respond to all theA’s queries.
For thek+1-th CreateorReplace Public Key query on ID,
Bjust responds with a handle h
∗without creating the keys.
WhenAissues the Leak Private Key (h∗,f),Bwill encodethe
leakageAasks for this IDinPhase 1 as a single polynomial
time computable function fwith domain Zn
p2and with an
image of size at most 2/lscriptsk. It can do this by ﬁxing the valuesof all other keys and ﬁxing all other variables involved in the
challenge key. Bthen receives a sample /angbracketleft/vectorδ,f(/vectorΓ)/angbracketright(where/vectorΓ
is either distributed as /vector τor as/vectorτ/primeusing the notation of the
Lemma 1).Bwill usef(/vectorΓ) to answer A’sLeakqueries for
thek+1-th handle by implicitly deﬁning the challenge key
as follow:
•If thek+1-thqueryisonthe Createoracle,Bgenerates
normaldIDusing msk.Bchooses random values r1,r2∈
Zp2, and implicitly sets the Gp2components of the full
privatekey skIDtobeg/vectorΓ/prime
2,w h e r e/vectorΓ/primeisdeﬁnedtobe /angbracketleft/vectorΓ,0/angbracketright+
/angbracketleft0,...,0,r1,r2/angbracketright.Bdeﬁnes the non- Gp2components of the
key to ﬁt their appropriate distribution. It can answer the
sub-case 2a correctly.
•If thek+1-thqueryisonthe Replace Public Key oracle,B
choosesrandomvalues r1,r2∈Zp2, andimplicitly sets the
Gp2components of the partial privatekey to be g/vectorΓ/prime
2,w h e r e
/vectorΓ/primeis deﬁned to be /angbracketleft/vectorΓ,0/angbracketright+/angbracketleft0,...,0,r1,r2/angbracketright.Bdeﬁnes the
non-G p2components of the key to ﬁt their appropriate
distribution. It can answer the sub-case 2b correctly.
At some point, Adeclares the challenge messages. Then
Bchooses elements t2∈Zp2such that δnr1+t2r2≡0
modp2. It then constructs the challenge ciphertext using
/angbracketleft/vectorδ,0/angbracketright+/angbracketleft0,...,0,0,t2/angbracketrightas the Gp2’s exponents (recall that
/vectorδis of length n+1 ) . N o w ,i f /vectorΓ is orthogonal to /vectorδ,t h e n
thek+1-th handle points to NSF full/partial private keys.
Otherwise, it points to truly SF full/partial private keys.
It is clear that Bcan easily answer Phase 2 queries.
Hence,Bcan use the output of Ato gain a non-negligible
advantage in distinguishing ( /vectorδ,f(/vectorτ/prime)) and (/vectorδ,f(/vector τ)).
Hence, no PPT adversary can distinguish Gamekand
AltGame k+1 under the assumption 2.
Lemma 6.If the assumption 2 holds and /lscriptsk≤(n−2c−
1)logp2, no PPT adversary can distinguish AltGame k+1
andGamek+1.
Proof. IfthereexistsaPPT adversary Athatcandistin-
guish AltGame k+1and Gamek+1 with non-negligible
probability, then we can build a simulator Bto break as-
sumption2. Breceivestheprobleminstance( N,G,GT,ˆe,g1,
g3,gz
1gν
2,gμ
2gρ
3) and a challenge term T, which is equal either
togω
1gσ
3orgω
1gκ
2gσ
3.Bsimulates as follows:
Setup: Same as the Setup phase of the proof of Lemma 4.
Oracle Query SinceBknowsα,xi,yi,rwhen generating
msk,Bcan answer all queries. For the j-th query to the
CreateorReplace Public Key oracle for the identity IDj:
•If thej-th query is to the Createoracle,Bcan generate
normaldIDusing msk(w hi c hca nbel ea k edo rextra cted
later).Brunsβ←Set-Secret-Value (mpk,IDj)a n d
pkID←Set-Public-Key (mpk,β).
−Ifj≤k,Bruns skID←Set-Private-Key (mpk,dID,
β) and puts ( H+1,IDj,pkID,dID,sk ID,0) to the set
Υ.
−Ifj>k+1, runs skID←Set-Private-Key (mpk,dID,
β). Denote dID=(/vectorD,D1,D2)a n d skID=(/vectorS,S1,S2).
Bpicks random vectors /vector ρ1,/vectorγ1,/vectorρ2,/vectorγ2$←Zn+2
N.I t
20computes the following full private key:
/tildewiderdID=/angbracketleftBig
/vectorD,D1,D2/angbracketrightBig
∗(gμ
2gρ
3)/vector γ1∗g/vector ρ1
3,
/tildewidestskID=/angbracketleftBig
/vectorS,S1,S2/angbracketrightBig
∗(gμ
2gρ
3)/vector γ2∗g/vector ρ2
3.
Bputs (H+1,IDj,pkID,˜dID,˜skID,0) to the set Υ,
−Ifj=k+1,Brandomly picks /angbracketleftz1,z2,...,z n/angbracketright$←Zn
N
and vectors /vector ρ1,/vectorρ2,/vectorγ2$←Zn+2
N.Buses the challenge
termTto generate the partial private key d/primeID:
d/prime
ID=/angbracketleftBig
/angbracketleftTd1z1,...Td1zn/angbracketright,T−(aIDk+1+b)n/productdisplay
i=1T−xizi
∗gα,Td/angbracketrightBig
∗g/vector ρ1
3.
Bruns (/vectorS,S1,S2)←Set-Private-Key (mpk,d/prime
ID,β)
and computes the following SF full private key:
˜skID=/angbracketleft/vectorS,S1,S2/angbracketright∗(gμ
2gρ
3)/vector γ2∗g/vector ρ2
3,
and puts ( H+1,IDj,pkID,d/primeID,˜skID,0) to the set Υ.
IfT=gω
1gσ
3, there is no Gp2part and Bhas formed
a properly distributed normal partial secret key. If
T=gω
1gκ
2gσ
3, this key is SF with the parameter /vector η=
/angbracketleftκd1z1,...,κd 1zn/angbracketright,η1=−κ(aIDk+1+b+/summationtextn
i=1xizi),
η2=κd. Similarly, the terms z1,...,z n,x1,...,x n,
d,a,bappear random modulo p2by the Chinese Re-
mainder Theorem. Therefore, Bhas formed a prop-
erly distributed SF partial private key.
ThenBreturnsH+1 and updates H←H+1.
•If thej-th query is to the Replace Public Key oracle,
then the simulation of this oracle is the same as thatin the proof of Lemma 4.
Challenge: It is the same as described in the Challenge
phase of the proof of Lemma 4.
The NSF property analysis is similar to that of Lemma
4.
In summary, under the assumption 2, if the leakage is
at most ( n−2c−1)logp2, no PPT adversary has a non-
negligible probability in distinguishing between: (1) Game
kandAltGame k+1 and (2) AltGame k+1and Game
k+1. Therefore, no PPT adversary can distinguish Game
kandGamek+1.
Lemma 7.If the assumption 2 holds and /lscriptmsk≤(n−2c−
1)logp2, no PPT adversary can distinguish GameQand
GameMSK .
Proof. IfthereexistsaPPTadversary Athatcandistin-
guish GameQandGameMSK with non-negligible proba-
bility, then we can build a simulator Bto break assumption
2.Breceives the problem instance ( N,G,GT,ˆe,g1,g3,gz
1gν
2,
gμ
2gρ
3) and a challenge term T, which is equal to gω
1gσ
3or
gω
1gκ
2gσ
3.Bsimulates as follows:
Setup: Bpicksα,a,b,d,x 1,...,x n∈RZNand sets
g1=g, g 3=X3,u1=ga,h1=gb,v1=gd.
Bgives the master public key mpk=(N,G,GT,ˆe,g1,u1,
h1,q1,v1,ˆe(g1,v1)α,gxi)t oA.Buses the challenge termTto generate the master secret key msk:
msk=/angbracketleftBig
/angbracketleftTdy1,...,Tdyn/angbracketright,gαT−bn/productdisplay
i=1T−xiyi,Td,Ta/angbracketrightBig
∗g/vector ρ
3.
where/angbracketlefty1,y2,...,y n/angbracketright$←Zn
Nand/vector ρ$←Zn+3
N.I fT=
gω
1gσ
3, there is no Gp2part and Bhas formed a prop-
erly distributed normal msk.I fT=gω
1gκ
2gσ
3,t h i sk e y
is SF with the parameter /vector ι=/angbracketleftκdy1,...,κdy n/angbracketright,ι1=
−κ(b+/summationtextn
i=1xiyi),ι2=κd,ι3=κa. Similarly, all terms
y1,...,y n,x1,...,x n,d,a,bappear random modulo p2
by the Chinese Remainder Theorem. Therefore, Bhas
formed a properly distributed SF msk.
Oracle Query: Using the SF msk,Bcan generate all SF
keys, by using gμ
2gρ
3andg3to re-randomize the Gp2p3
andGp3part respectively.
Challenge: It is the same as described in the Challenge
phase of the proof of Lemma 4.
Note that the msksimulated by Bis NSF with respect
to the challenge ciphertext. Therefore, we have to further
show that no PPT adversary can distinguish between NSFand truly SF mskwhen given the leakage of msk.
Lemma 8.The advantage of Achanges by a negligible
amount if the msk is changed from truly SF to NSF, when
/lscript
msk=(n−2c−1)logp2, for any ﬁxed positive constant c.
Proof. The proof of this lemma is similar to that of
Lemma 5. Here we just describe the diﬀerences. Recallthat the G
p2components of the partial/full private keys are
deﬁned to be /angbracketleft/vectorΓ,0/angbracketright+/angbracketleft0,...,0,r1,r2/angbracketrightin Lemma 5. Now for
the the master key we should deﬁne the Gp2components as
/angbracketleft/vectorΓ,0,0/angbracketright+/angbracketleft0,...,0,r1,r2,0/angbracketright+/angbracketleft0,···,0,θ/angbracketrightfor some random
r1,r2,θ∈Zp2. (We note that all the partial/full private
keys are n+2 length vectors and the master key is a n+3
length vector, hence the /vectorΓ in both the partial/full private
keys and the master key are n+1-length.)
When comes to the point that Ashould declare the chal-
lenge message, Bpickst2∈Zp2such that δn+1(r1−ID∗θ)+
t2r2≡0m o dp2,w h e r e ID∗is the challenge identity. Ob-
serve that we use the output of Ato gain a non-negligible
advantage in distinguishing ( /vectorδ,f(/vectorτ/prime)) and (/vectorδ,f(/vector τ)).
Lemma 9.If the assumption 3 holds, no PPT adversary
can distinguish GameMSK andGameFinal .
Proof. If there exists a PPT adversary Athat can dis-
tinguish GameMSK andGameFinal with non-negligible
probability, then we can build a PPT simulator Bto break
assumption 3. Breceives the problem instance ( N,G,GT,ˆe,
g1,g2,g3,gα
1gν
2,gs
1gμ
2) and a challenge term T, which is equal
togαs
1or a random element in G.Bsimulates as follows:
Setup: Brandomly picks x1,...,x n,a,b,d∈ZNand sets:
mpk=(ˆe(gα
1gν
2,v1),gxi
1,u1=ga
1,h1=gb
1,v1=gd
1).
The corresponding SF master secret key is computed by
picking/angbracketlefty1,...,y n,r/angbracketright$←Zn+1
Nand vectors /vectorρ,/vectorγ$←Zn+3
N:
msk=/angbracketleftbig
vyi
1,(gα
1gν
2)·h−r
1n/productdisplay
i=1g−xiyi
1,vr
1,ur
1/angbracketrightbig
∗g/vector γ
2∗g/vector ρ
3.
Oracle Query: Bcan simulate all oracles using theSF msk.
21Challenge: Breceives M∗
0,M∗
1and the challenge identity
ID∗fromA.Bsearches Υ for the corresponding public
key ( pk1,π)o f ID∗with the largest handle (It may be
replaced by the A). Denote pk1=ˆe(g1,v1)αβ∗.Bknows
β∗if the public key is not replaced. Otherwise, Buses
the knowledge extractor of the NIZK proof to extract
β∗fromπ.T h e n Brandomly chooses b/prime←0,1a n d
generates the SF ciphertext using Tandgs
1gμ
2from the
assumption:
C∗=(C∗
0=M∗
b/prime·ˆe(T,vβ∗
1),/vectorC∗=(gs
1gμ
2)xi,
C∗
1=(gs
1gμ
2)d,C∗
2=(gs
1gμ
2)aID∗+b).
All terms x1,...,x n,d,a,bappear random modulo p2
by the Chinese Remainder Theorem. Therefore, Bhas
formed a properly distributed SF ciphertext.
IfT=gαs
1, the ciphertext is well distributed. Hence B
simulates the GameMSK correctly in A’s view. Otherwise,
ifT$←G,t h et e r m C∗
0is entirely random and we get an SF
ciphertext of a random message. Thus Bproperly simulates
theGameFinal .H e n c e , Bcan useA’s guess to break the
assumption 3 with non-negligible probability.
Putting It All Together. Using the above lemmas, no
PPT adversary can distinguish GameReal andGameFi-
nal. Recall that the output of each game includes the view
ofAat the end of experiment along with the challenger’s
selection bit b,s i n c eA’s guessb/primeat the end of the game can
be eﬃciently computed from the output of each game. IntheGameFinal ,t h ev i e wo f Ais independent of the ran-
dom bit b.H e n c eP r [ Awins] =
1
2in the GameFinal .T h i s
concludes the proof of Theorem 1.
Theorem 2.Under assumption 1, 2, 3 and for /lscriptsk=(n−
2c−1)logp2,w h e r ecis a ﬁxed positive constant, our CL-
PKE scheme is /lscriptsk-leakage secure against Type II adversary.
The proof is given in the full version of the paper.
4.4 Extension to Continual Leakage Model
Our construction can be easily extended to the continual
leakage model as in [10]. It means that the user and the
PKG can periodically refresh their secret keys. We onlyrequire that the leakage among each update is bounded by/lscript
skand/lscriptmskbits respectively. The changes to the model and
the construction are similar to those of [10] and are omitted
due to the space limit.
We also note that by extending to the continual leakage
model, it allows more decryption queries for CCA1 security.
It is because after each update, the leaked bits for the thefull private key is reset to zero in the security model.
5. CONCLUSION
In this paper, we give the ﬁrstsecurity model for leakage-
resilient CL-PKE.Wegivea concreteconstructionandproveitssecurityinthestandardmodel. Weleavetheconstructionunder stronger security model as an open problem, eitherin terms of traditional CL-PKE security (CCA2 security, ormalicious PKG Type II adversary), or in the area of leakage-resilient cryptography (continual leakage model, or auxiliary
input model).6. REFERENCES
[1] A. Akavia, S. Goldwasser, and V. Vaikuntanathan.
Simultaneous hardcore bits and cryptography againstmemory attacks. In TCC, volume 5444 of LNCS,
pages 474–495. Springer, 2009.
[2] S. S. Al-Riyami and K. G. Paterson. Certiﬁcateless
public key cryptography. In ASIACRYPT,v o l u m e
2894 of LNCS, pages 452–473. Springer, 2003.
[ 3 ]M .H .A u ,Y .M u ,J .C h e n ,D .S .W o n g ,J .K .L i u ,a n d
G. Yang. Malicious kgc attacks in certiﬁcateless
cryptography. In ASIACCS , pages 302–311. ACM,
2007.
[4] K. Bentahar, P. Farshim, J. Malone-Lee, and N. P.
Smart. Generic constructions of identity-based and
certiﬁcateless kems. J. Cryptology, 21(2):178–199,
2008.
[5] Z. Brakerski, Y. T. Kalai, J. Katz, and
V. Vaikuntanathan. Overcoming the hole in thebucket: Public-key cryptography resilient to continualmemory leakage. In FOCS 2010 . IEEE Computer
Society, 2010.
[ 6 ]S .S .M .C h o w ,C .B o y d ,a n dJ .M .G .N i e t o .
Security-mediated certiﬁcateless cryptography. In
PKC, volume 3958 of LNCS, pages 508–524. Springer,
2006.
[ 7 ]S .S .M .C h o w ,V .R o t h ,a n dE .G .R i e ﬀ e l .G e n e r a l
certiﬁcateless encryption and timed-release
encryption. In SCN, volume 5229 of LNCS, pages
126–143. Springer, 2008.
[8] A. W. Dent. A survey of certiﬁcateless encryption
schemes and security models. Int. J. Inf. Sec.,
7(5):349–377, 2008.
[ 9 ]A .W .D e n t ,B .L i b e r t ,a n dK .G .P a t e r s o n .
Certiﬁcateless encryption schemes strongly secure inthe standard model. In PKC, volume 4939 of LNCS,
pages 344–359. Springer, 2008.
[10] A. B. Lewko, Y. Rouselakis, and B. Waters. Achieving
leakage resilience through dual system encryption. InTCC, volume 6597 of LNCS, pages 70–88. Springer,
2011.
[11] A. B. Lewko and B. Waters. New techniques for dual
system encryption and fully secure HIBE with shortciphertexts. In TCC, volume 5978 of LNCS, pages
455–479. Springer, 2010.
[12] B. Libert and J.-J. Quisquater. On constructing
certiﬁcateless cryptosystems from identity based
encryption. In PKC, volume 3958 of LNCS, pages
474–490. Springer, 2006.
[13] A. Shamir. Identity-based cryptosystems and
signature schemes. In CRYPTO, volume 196 of LNCS,
pages 47–53. Springer, 1984.
[14] B. Waters. Dual system encryption: Realizing fully
secure IBE and HIBE under simple assumptions. InCRYPTO, volume 5677 of LNCS, pages 619–636.
Springer, 2009.
[15] G. Yang and C. H. Tan. Certiﬁcateless cryptography
with kgc trust level 3. Theor. Comput. Sci. ,
412(39):5446–5457, 2011.
[16] T. H. Yuen, S. S. M. Chow, Y. Zhang, and S. M. Yiu.
Identity-based encryption resilient to continualauxiliary leakage. In EUROCRYPT, volume 7237 of
LNCS, pages 117–134. Springer, 2012.
22