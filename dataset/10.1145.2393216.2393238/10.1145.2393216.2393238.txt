Permission to make digital or hard copies of all or part of this work for 
p
ersonal or classroom use is granted without fee provided that copies are 
not made or distributed for profit or commercial advantage and that 
copies bear this notice and the full citation on the first page. To copy 
otherwise, or republish, to post on servers or to redistribute to lists, 
requires prior specific permission and/or a fee. 
CCSEIT-12 , October 26-28, 2012, Coimbatore [Tamil nadu, India] 
Copyright © 2012 ACM 978-1-4503-1310-0/12/10…$10.00. Elicitation of Security Requirements for E-Health System 
b
y applying Model Oriented Security Requirements 
Engineering (MOSRE) Framework 
 
P
.Salini 
Research Scholar 
D
epartment of Computer Science and 
Engineering 
Pondicherry Engineering College  
salini@pec.edu 
 
  
S.Kanmani 
Professor 
D
epartment of Information Technology 
Pondicherry Engineering College 
kanmani@pec.edu 
 
  
A
BSTRACT  
E
-health is a health care system which is supported by electronic 
process and communication. The information that is kept in the 
system must be accurate. In case of false information, it may cause 
harm to human life. So this system needs more security to protect 
the credential information. E-Health system is the most security 
sensitive process handled electronically. The highest achievable 
security is never too much for an E-Health system. So when 
system is being built, tasks such as Security Requirements 
Elicitation, Specification and Validation are essential to assure the 
Quality of the resulting secure E-Health system. By considering 
the Security requirements as functional requirements in the 
Requirement phase, the completeness of Security Requirements 
for E-Health system can be developed. In this paper we propose 
Model Oriented Security Requirements Engineering (MOSRE) 
Framework in the early phases of E-Health system development, 
to identify assets, threats and vulnerabilities. This helps in 
standardizing the Security Requirements for secure E-Health 
system without any security issues.   
Categories and Subject Descriptors 
D
.2.1 [ Requirements/Specifications ]: Elicitation methods-  
Framework for security requirements elicitation. 
General Terms  
D
ocumentation, Design, Security, Standardization. 
Keywords  
E
-Health, Functional Requirements, Threats, Security issues, 
Security Requirements, Security Requirements Engineering. 
1. I NTRODUCTION 
In olden days patient data are maintained manually in hospital. 
T
his is a difficult task to access hospital information from 
different location as well as it allows anyone to access that information easily and modify. All this happen due to lack of 
security requirements. This problem can be overcome by E-Health 
system. The aim of E-Health system [14]  is to provide remote 
a
ccess to only authorized doctors and patients through internet. 
But then still there are security issues in this system. Due to lack 
of security, other person those who are not authenticated can 
tamper information of the system. This may affect the life of 
people. In this paper, we apply our proposed framework Model 
Oriented Security Requirements Engineering (MOSRE) [4] to 
elicit security requirements and overcome the security issues for 
E-Health system.  
The importance of Securing E-Health system is that, E-Health 
w
eb application is the only thing standing in the way of an 
attacker and sensitive information. An attacker may be able to 
view or manipulate sensitive information, obtain unauthorized 
access to E-Health system and able to take control of the whole 
application. So an E-Health system should consider the following 
minimum requirements: 
• To ensure eligible doctors and patients to log in the system. 
• To maintain the secrecy of patients details 
• To protect the secrecy of the patient disease from unauthorized 
persons. 
• To ensure the privacy of patient.  
• To guarantee accessibility and availability of the system to as 
many users as possible 
• To ensure the doctor’s prescription are disclosed from 
unauthorized person. 
• To guarantee that patients details is available to only authorized 
doctors. 
But the reality of E-Health security is that, the security at 
application system done is not fully secure. When the 
infrastructure and applications is analyzed, you can identify 
potential threats and each threat presents a degree of risk. You 
have to secure infrastructure and environment where the E-Health 
system is put on. The reliance on firewall and host defenses is not 
sufficient when used in isolation. The requirements must be clear, 
comprehensive, consistent and unambiguous. This statement has 
significance for security requirements and if you say application 
must be secure, it is not security requirements. It is hard to 
construct secure system or to make statements about security 
unless we know what to secure, against whom and at what extent. 
126This problem can be solved by eliciting and analyzing security 
requirements in detail with security requirements engineering 
phase. 
Security Requirements Engineering (SRE) is a phase that comes 
before design and programming, plays a more important role that 
determines the success of Web Applications design. But the fact is 
security requirements engineering, insufficiencies have led to 
many projects with poor security requirements and blamed as the 
major reason for many web applications’ failures. Therefore, 
Security requirements engineering is now moving to the forefront 
of gaining increased significance in software engineering for 
services oriented web applications. The security requirements for 
electronic health systems are not standardized, so we propose to 
adopt Security requirements engineering and secure E-Health web 
application at three layers: the network layer, host layer, and the 
application layer. In this paper, we discuss on Security 
Requirements Engineering and the steps involved in MOSRE 
Framework in section 2, the Security Requirements for E-Health 
system, are found in the section 3 using MOSRE Framework, the 
results are discussed in section 4 and section 5 concludes with 
future works. 
2.  SECURITY REQUIREMENTS 
ENGINEERING 
The Security Requirements Engineering is the process of eliciting, 
s
pecifying, and analyzing the security requirements for system.  It 
is concerned with the prevention of harm in the real world and 
considering Security Requirements as functional requirements. 
Many methods [1, 2] have been developed that facilitate this kind 
of requirements analysis and the development of security 
requirements. The main focus of security requirements 
engineering is on defining and describing what a software system 
should do to satisfy the informal requirements provided by a 
statement of need.  
In this paper, we will define and describe what the secure E-
Health system should do to ensure a secure, robust, accurate, and 
quality-based design and implementation. Our MOSRE 
Framework for web applications can be used to elicit and model 
the Security Requirements for E-Health system. By considering 
the Security requirements as functional requirements in the 
Requirement phases, the Security requirements and domain 
knowledge for E-Health system can be captured in a well-defined 
model. Security requirements integration with the artifacts of 
other phases can be cost effectively improved and can effect a 
significant reduction of the problems currently encountered in the 
E-Health system due to poor Security Requirements Engineering 
and Management. By identifying Security Requirements at 
application level, host, database level and network level in the 
earlier stage of E-Health system development life cycle we will be 
able to design and build secure E-Health system which is less 
prone to vulnerabilities and threats. It is a necessary to build a 
secure E-Health system which is considered to be in the higher 
security level. Performing a good security analysis on E-Health 
web application is an essential step in order to guarantee a 
reasonable level of protection. In the subsection is about the 
improved Model Oriented Security Requirements Engineering 
Framework for web applications which applied to elicit the 
security requirements for E-Health system. 2.1 M odel Oriented Security Requirements 
Engineering Framework for Web Applications 
Our improved Model Oriented Security Requirements 
E
ngineering Framework of [3, 4] for Web Applications comprises 
of 16 steps involved to elicit and analyze the Security 
Requirements for web application. Our process follows the spiral 
process model which is iterative and all phases of Requirements 
Engineering are covered in this Framework. The Model Oriented 
Security Requirements Engineering  Framework  for web 
applications covers 16 steps as follows: 
STEP 1 Identify the Objective of the Web Applications 
STEP 2 Identify the Stakeholders 
STEP 3 Identify the Assets 
STEP 4 Select an Elicitation Technique 
STEP 5 High level of Architecture Diagram of Web Applications 
STEP 6 Elicit Non-Security goals and Requirements 
STEP 7Generate Use Cases Diagram for the Web Applications 
STEP 8 Identify the Security Goals / Security Objectives 
STEP 9 Identify threats and vulnerabilities 
STEP 10 Risk Assessments  
STEP 11 Categorize and Prioritize the Threats and Vulnerabilities 
for mitigation 
STEP 12 Generate Misuse Cases Diagram for the Web 
Applications  
STEP 13 Identify Security Requirements 
STEP 14 Generate Use Cases Diagram for the Web Applications 
considering Security Requirements 
STEP 15 Generate Structural Analysis models 
STEP 16 Develop UML diagrams 
Along with these steps, validation and specification of security 
requirements can be done in parallel. In the next section we apply 
these steps for eliciting security requirements for an E-Health 
system. 
3. A pplication of Model Oriented Security 
Requirements Engineering Framework for E-
Health System 
Our Model Oriented Security Requirements Engineering 
F
ramework was applied in eliciting and modeling Security 
Requirements for E-Health system. The Objective of the E-Health 
system is a system in which the patient and doctor data are 
recorded, stored and processed primarily as digital information. E-
Health system development should be based on the multilateral 
view of the stakeholders so we should include people like patient, 
doctor, security experts, receptionist, nurse, developers and 
requirements engineering team. The business Assets are patient 
and doctor details, doctor’s prescription, treatment details and the 
system assets are Application software, database, network, server.  
The brainstorming technique can be used for elicitation of 
requirements for the E - health system. With the objective we can 
identify the number of tiers in the applications. So draw a rough 
127architecture diagram with high level of abstraction. Network or 
hierarchical style of Architecture can be chosen based on the 
application domain. The High level of Architecture Diagram 
shown in the Figure.1 for E-Health system is drawn to analyze the 
data flow and the entry points to the system. 
 
 
 
Figure 1. High level o f Architecture Diagram for  E-
Health System  
T
he next step is to Elicit Non-Security goals and Requirements. 
The business requirements are categorized as essential and 
nonessential requirements and prioritized according to the 
Stakeholders preference. Following are some of the business 
requirements collected from the stakeholders.  
• Doctors should have the facility to prescribe medicine 
• Patients' details should be available to the doctor 
• The system should be flexible to access 
• Others than doctors are not eligible to store prescribe 
medicine details in database 
• Only for patients and doctors have rights to view 
prescription details 
• Navigation facility [15] should be provided such that 
users can easily switch to a different page when 
necessary 
• The administrator should have rights to add, delete and 
modify records in the database 
• Patient details will be viewed by particular doctor to 
prescribe medicine 
• Doctor's prescription should be stored 
• The implementation details should be transparent to 
users [15] 
• Hospital information should be available to users at any 
time 
The business requirements are gathered; for better understanding 
and then the use case modeling [5] of the applications should be 
developed. In the Figure.2 the use case diagram depicts the actors 
of the system as doctor, patient and their usage of the system. The 
doctor uses the system to prescribe medicine and view patient’s 
health status. The admin authenticates the doctor, to view or 
update the patient details. 
The security goals / security objectives can be identified with 
respect to assets, business goals and organizational principles of the organization. The following are some of the Security Goals or 
Security Objectives identified in the system with the help of the 
stakeholders and with them we will be able to find the security 
requirements for the system. 
 
 
Authentication [14] –doctor, patient, nurse, receptionist 
Confidentiality [14] – doctor’s details, patient’s details, doctor’s 
prescription, privacy of patient i.e. to protect patient credential 
information 
 
 
 
Figure 2. Use Case Diagram for E-Health System 
Integrity [14] – Prevent unauthorized users from modifying the 
d
atabase, especially prescription, and patient’s records 
Availability    – Ensure that the E-Health is available 99.99 
percent of the time 
Authorization –all authorized people able to access the system 
Auditability – audit the system regularly 
 
By identifying the assets, business goals and security goals the 
threats to the applications can be identified. The following are 
some of the identified threats and vulnerabilities in the system and 
with them we will be able to find the security requirements for the 
system. With the help of the stakeholders and the high level 
architectural diagram we have identified the threats and 
vulnerabilities in the E-Health system at network, application and 
database levels. 
Threats to the E-Health system 
• Password Cracking 
128• Network eavesdropping between browser and Web 
server to capture doctors and patients credentials 
• SQL injection, to execute commands and access or 
modify data 
• Cross-site scripting (XSS) where an attacker injects 
script code 
• Information disclosure patients secrets about diseases 
• Unauthorized access to the E-Health database 
• Discovery of encryption keys used to encrypt sensitive 
data (including user’s password) in the database 
• Unauthorized access to Web server resources and static 
files 
Vulnerabilities in the E-Health system 
• Weak or blank passwords, Passwords that contain 
everyday words 
• Lack of password complexity enforcement 
• Missing or weak input validation at the server 
• Failure to validate cookie input 
• Failure to encode output leading to potential cross-site 
scripting issues 
• Exposing an administration function through the 
customer-facing Web application 
The next step is to assess and determine the risk when the threats 
and vulnerabilities occur. The impact of threats and vulnerabilities 
are analysed and risk determination process is carried out. Risk 
Assessment is done by using the Microsoft method [6] of risk 
analysis for the E - health system. In the Table 1 some of the 
sample threats and the level of risk by the threat to the E - health 
system are presented. DREAD is a classification scheme [6] for 
quantifying, comparing and prioritizing the amount of risk 
presented by each evaluated threat. The DREAD acronym formed 
from the first letter of each category namely Damage, 
Reproducibility, Exploitability, Affected users and Discoverability 
as shown in Table 1.  
Table 1. Threats and risk level of the threat to E-Health 
System 
Threat D R E A D Total Rating 
The attacker 
obtains doctors 
and patients 
credentials by 
monitoring the 
network 3 3 2 2 2 12 High 
SQL commands 
injected into E-
Health 
application 3 3 3 3 2 14 High  
The threats and vulnerabilities can be categorized with respect to 
the security goals and security policies of the organization and 
prioritized based on the level of security and assets to be secured.  
In Table 2 some of the threats and vulnerabilities for the E - 
health system are categorized and prioritized. The threat 
Impersonate user is categorized under authentication, security 
goals and given high priority because it will affect the working of 
the whole system and the patient. 
The detailed set of misuse case diagram [7] of the applications 
should be developed that encompass the most significant threats 
to the system e.g. Tamper misuse case, unauthorized users misuse 
case. The Misuse Cases are identified and the Figure. 3 show the 
misuse cases like Denial of Service get the privilege and 
impersonate user against login use case of an E - health system 
with the hacker as the actor.  
Table 2. Categorization and Prioritization of the Threats and 
Vulnerabilities for E-Health System 
Threats/ Vulnerabilities Category Priority 
Trap doors Confidentiality High 
Tampering Integrity, 
Confidentiality Medium 
SQL injection Confidentiality High 
Impersonate user Authentication, 
Democracy High 
Packet sniffing Confidentiality High 
Malicious code Integrity, 
Confidentiality Medium 
Fishing Accuracy High 
Not analyzing incoming 
packets Integrity Medium  
 
 
Figure 3. Misuse cases against the use cases of E-Health 
System  
The security requirements are the countermeasures that the 
a
pplications should have, as the functional requirements. The  
The Second International Conference on Computational Science, 
E
ngineering and Information Technology ’12 , October 26–28, 2012, 
Coimbatore, India. 
Copyright 2012 ACM 1-58113-000-0/00/0010…$10.00. 
 
129Security Requirements for E-Health system is identified based on 
the business and system assets. This process is repeated for a 
certain number of iterations based on the level of security.  
Security requirements based on business assets  
• The E - Health process should not be subject to any 
manipulation to patient and doctors details  
• The system should provide accurate time and date 
settings  
• The system should not allow improper actions by 
doctors 
• The system should not allow hospital details to be 
observed or recorded  
• The system should not allow tampering with audit logs  
Security requirements based on system assets   
• Use secure authentication, which does not send 
passwords over the network 
• Use secure communication channels  
• Use remote procedure call encryption   
• Firewall policies that block all traffic except expected 
communication ports  
The security requirements are gathered; for better understanding, 
the use case diagram of the applications should be generated, that 
encompasses the security requirements of the system. The Use 
Cases Diagram generated for the E-Health system considering 
Security Requirement like authenticate user which mitigates 
impersonate user as shown in the Figure.4 
 Figure 4. Use Cases Diagram for the E-Health system 
considering Security Requirements 
 
With functional requirements considering security requirements, 
non functional requirements and the Use Cases Diagram 
generated for the E-Health system considering Security 
Requirements. 
 
The UML diagrams like class, sequence and activity diagrams for 
the E - health system is generated with high level of abstraction in 
the elaboration phase of security requirements engineering.  
 
 
Figure 6. Sequence Diagram for the E-Health system 
considering Security Requirements 
 
Figure.6 presents the sequence of E-Health system process 
between doctor/patient, server and database. It gives the process 
of session management to avoid session hijacking and 
impersonate threats.   
4. D iscussion 
In the previous section we have identified the list of some security 
r
equirements and they are based on the business and system assets 
by applying “Model Oriented Security Requirements Engineering 
Framework for Web Applications”, to online health system. Based 
on the identified list of threats, vulnerabilities and security 
requirements we found that using our Model Oriented Security 
Requirements Engineering Framework for Web Applications , we 
will be able to get a better set of security requirements for secure 
E-Health system. There are many methods to elicit security 
requirements but concentrating less on the phases of requirements 
engineering and consider security requirements as constraints on 
functional requirements [8] or non functional requirements [9, 10, 
11, and 12].  
130In this paper we have identified the need for systematic eliciting 
and producing a complete set of requirements specified for 
electronic health systems that unifies the requirements reflected by 
the traditional method, and the required security attributes that the 
system should exhibit. We have applied a software engineering 
methodology for eliciting requirements specification in a widely 
accepted format. This has been accomplished through a set of use 
cases, along with supplementary specifications. This requirement 
specification is the outcome of the first “iteration” of the 
requirements elicitation process.  
5. C onclusion and Future Work 
Security Requirements have to be considered in the early phase of 
R
equirements Engineering [13], so a Model Oriented Security 
Requirements Engineering Framework is developed for Web 
Applications and used to elicit requirements for a secure E-Health 
system. The motivation for this is that requirements engineering 
activities are often executed by other people than those writing the 
code, and often without much contact between the two groups 
which results in failure of the system. This applies in particular to 
security requirements, which is a major quality, attribute of 
today’s system and Realities of E-Health Security. It is therefore 
important to develop both the ability of the people involved in the 
development to identify potential security aspects, and the 
capabilities of the development team to solve these needs in 
practice through secure design.  
 As a future work the Security Requirements identified 
from RE Phase should be carried to the design phase because 
good design will give Vulnerability free E-Health. We also intend 
to do penetration testing and find the results based how far our 
application is vulnerable. 
6. A CKNOWLEDGMENTS 
Our thanks to the reviewers for reviewing our paper and for their 
v
aluable comments. 
7. R EFERENCES 
[1] B enjamin Fabian , SedaGurses , Maritta Heisel, Thomas 
Santen , Holger Schmidt, ”A comparison of security 
requirements engineering methods”, Requirements Eng 
(2010) special issue security requirements engineering , 
15:7-40, Published online: 26 Nov 2009, Springer-Verlag 
London Limited 2009. 
[2] Siv Hilde Houmb , Shareeful Islam, Eric Knauss, Jan Jurjens, 
Kurt Schneider, ”Eliciting security requirements and tracing 
them to design: An integration of Common Criteria, 
heuristics, and UMLsec Requirements Eng (2010) special 
issue security requirements engineering , 15:63-93, 
Published online: 28 Nov 2009, Springer-Verlag London 
Limited 2009.  
[3] P. Salini, S. Kanmani,“ A Model based Security 
Requirements Engineering Framework applied for Online 
Trading System” IEEE International Conference on Recent 
Trends in Information Technology (ICRTIT 2011) , Madras 
Institute of Technology, Anna University, Chennai, India, 
ISBN: 978-1-4577-0590-8, Paper ID-177, PP. 1195-1202, 
June 3-5, 2011. [4] P. Salini and S. Kanmani. “Model Oriented Security 
Requirements Engineering (MOSRE) Framework for Web 
Applications”. In Proceedings of the Second International 
Conference on Advances in Computing and Information 
Technology (ACITY 2012), India, July 13 - 15, 2012, Vol.2 
and in Advances in Intelligent and Soft Computing book 
Series, Vol.177, pp. 341-353. 
[5] Jacobson. I, “Modeling with Use Cases: Formalizing Use 
Case Modelling. Journal of Object-Oriented Programming, 
1995. 
[6] J.D. Meier, Alex Mackman, Michael Dunner, Srinath 
Vasireddy, Ray Escamilla and Anandha Murukan , 
“Improving Web Application Security : Threats and 
Countermeasures”, Microsoft Corporation, Published: June 
2003 
[7] Guttorm Sindre, AndreasL. Opdah,” Eliciting security 
requirements with misuse cases”, Requirements Engineering 
(2005)10:34–44, Springer-Verlag London Limited 2004. 
[8] C.B. Haley, R. Laney, J.D. Moffett, and B. Nuseibeh, 
“Security Requirements engineering: A Framework for 
Representation and Analysis,” IEEE Transaction on Software 
Eng. Vol 34, no. 1, pp. 133-152, Jan/Feb 2008. 
[9] R. Mead, E.D. Houg, and T.R. Stehney, Security Quality 
Requirements Engineering (Square) Methodology, tech. 
Report CMU/SEI-2005-TR-009, Software Engineering. 
Institute. Carnegie Mellon Univ., 2005. 
[10] Hui Wang, Zongpu Jia, Zihao Shen,” Research in security 
requirements engineering process”, 1285-1288, IEEE 
conference, 2009 
[11] A. Apvrille and M. Pourzandi, “Secure Software 
Development by Example,” IEEE Security & Privacy, vol. 3, 
no. 4, 2005, pp. 10–17. 
[12] Graham, Dan. “Introduction to the CLASP Process.” Build 
Security In, 2006. https://buildsecurityin.us-
cert.gov/daisy/bsi/articles/best-practices/requirements/ 
548.html. 
[13] Eric Dubois, Haralambos Mouratidis, “Guest editorial: 
security requirements engineering: past, present and future”, 
Requirements Eng (2010) 15:1-5, Published online: 1 
January 2010, Springer-Verlag London Limited 2009. 
[14] S. Dritsas,  L. Gymnopoulos, M. Karyda, T. Balopoulos, S. 
Kokolakis, C. Lambrinoudakis    and  S.  Katsikas.  “A 
knowledge-based approach to security requirements for e-
health applications”. The electronic Journal on Emerging 
Tools and Applications,  In  the  Special  Issue:  “Emerging 
Security  Paradigms  in  the  Knowledge  Era”, Volume 2, 
issue 1, 2006.  
[15] Shuo Lu, Yuan Hong and Qian Liu and Lingyu Wang and 
Rachida Dssouli, “Implementing Web-based e-Health Portal 
Systems”. http://cimic.rutgers.edu/~yhong/pub/  
eHealthPortal.pdf. 
 
 
131