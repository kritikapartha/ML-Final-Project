Three Proposals for Object Orientation 
by Franklin Figoli 
AI. Sarutaia 320, Apt.122 
01403 - S~o Paulo - Brasil 
ABSTRACT.- People can reason in comprehension as well as in extension. The paper defines 
extension and comprehension reasoning through models, interprets Contemporary OO (CO0) concepts 
in extension and in comprehension, shows that CO0 was developed in extension and uses the 
comprehension approach to define relative entities. 
Our intuitive comprehension reasoning focus the reasoning on relative entities, which are the 
"objects" of OO. Then, this reasoning uses an OO approach. As a result, OO can be developed with 
day to day concepts in a friendly, simple and meaningful way. The paper shows which is the everyday 
concept that corresponds to each one of the main concepts of CO0. This allows to simplify CO0 and 
leads to make OO our natural way of dealing with the computer. 
The paper proposes the utilization of the "OO technology" of our intuitive comprehension reasoning 
as a base for OO developments. This leads to use the logic of this reasoning (which is not logic- 
mathematics) as the logic of OO, and leads to use Artificial Intelligence criteria as a basis for OO 
developments. 
The paper is one of the results a research, done by the author, in the logic of comprehension 
reasoning and in the computer methodologies and systems that follow from this logic. 
INTRODUCTION.- People can reason in comprehension as well as in extension. At the most advanced 
stage of our intelligence development we use comprehension reasoning. Then, we should have 
advantages using them. Then, lets take a comprehension approach and lets see what happens! 
Notice: all the concepts we are .qoin,q to use can, and should, be defined in a very precise way. As a 
matter of brevity, in this paper we are ,qoinq to make simplifications and we are not going to study the 
comprehension logic, "Object Oriented Loqic "1 , that supports our analysis and conclusions. 
CONCRETE REASONING.- Contemporary Logic Mathematics, as well as contemporary System 
Analysis and Development, are characterized by the use of Concrete reasoning 2. Fig.l, infra, 
represents Mr. Concrete, which is a computer that works at a concrete level. Its main parts are the 
following. 
(1)REALITY.. A "domain of real entities" A i, B',.,i Ck .... is considered as given in advance. Everything 
has to be based on these entities and/or in (elenientary) operations made from them. Each sentence, in 
order to be meaningful, has to refer to a specific "domain of real entities "3. For historical reasons, the 
authors only consider/study domains of independent entities. In practice, this masks real relative entities 
(such as the objects of OO) which, then, remain "unknown" or "meaningless". Later on we are going to 
study relative entities. 
- We are going to use a capital letter with one sub index (i, j, k, 1, 2,...) to name entities ("values") of the 
domain of entities. 
(2)SENSORS.- At the concrete level the minimum amount of information the sensors detect and 
process is a whole, real, concrete entity (A i, Bj,..). The sensors make a card Ais, Bjs .... correspond to 
each extemal and real individual A i, Bj .... 
- We can consider that these cards are data. Each card refers to a real value (A i, Bj,..) which was 
detected by means of ontological acts done by the sensors. 
- An unrestricted and error-free use of ontological acts is assumed. 
- It is also assumed that Mr. Concrete can form, and classify, groups of entities in an unrestricted way. 
(3)CARDS, GROUPS OF CARDS, GROUPS OF GROUPS OF CARDS.- Cards, groups of cards and 
13groups of groups of cards are stored in the computer. At the concrete level the reasoning remains stick 
to reality. Each card is the correspondent of a real object and it is assumed that the reasoning refers 
directly to the real object each card 
pinpoints to. A group of cards 
refers_to/is a class of objects, and a 
group of classes is a superclass. 
(4)MANUAL INPUT.- Lets use the 
Manual Input and lets see what 
happens. We enter manually sentence 
1: 
(1) Socrates is a man. 
(5)LOGIC UNIT.- Logic Unit (LU) 
receives the sentence "Socrates is a 
man". How will this sentence be 
understood? 
- LU will consider sentence 1 as a 
meaningless "sentence skeleton". For 
LU the word Socrates of sentence I is 
only an "open place" that has to be filled 
in order to become meaningful. That 
way, instead of the word Socrates a 
meaningful value is considered. Then, 
and only then, the sentence 1 will be 
considered as referring to a meaningful 
object (which is the real Mr. Socrates). 
- Lets assume that we told LU that the 
word Socrates refers to object A i = the 
real Mr. Socrates. Still one more step 
will be needed in order to make 
sentence 1 meaningful. What does 
the word man means? (,I [ MANUAL 
INRTf 
'A fulfils 
p' ~A A~ A 2 
llr. COlg~Ik, Tl I I 
Ck 
(2)Sens°rs I 
data AlS,A2s,...,BlS,... 
Iciasses (Ai)s,(Bl)s,... 
lsuperclasses • • 
I 
a sentence proce&sor I 
mathematical-logic 
I RRALI~/(1) 
cards(3) 
groups of cards. 
groups of groups 
of cards 
Logic Unit(S) 
'A fulfils q' OUTPUT (6) 
Fig.l 
- At the concrete level the solution is to say that the word man designs the class of all men. That way, 
the word man will design something meaningful, because the classes are formed with meaningful 
elements (individual real values) and Mr. Concrete can form classes. The result of all this what 
S.C.Kleene says, ""Socrates is a man" expresses that Socrates belongs to the class C of men. "4 This is 
the standard interpretation of "Socrates is a man" in most contemporary theories of logic. Sentences "A 
fulfils property p" and "A is a B" are interpreted 
in a similar way. "p" and "B" are/mean sets of 
values (classes). 
(6)OUTPUT.- The Output are sentences that 
refer to concrete, specific, situations and values. 
INHERITANCE.- Fig.2 represents the entities 
involved in a syllogism done in extension 5. 
Each rectangle represents a class of entities. 
Class man contains all men. Class mortal 
contains all the elements of class man. 
Furthermore, it contains all the elements of 
other classes (classes "elephant", "eagle", etc.). 
It is a superclass 6. [men] 
,Socrates 
Peter John [mortal] 
Elephants 
[  gle  
Syllogism in Extension Fig.2 
14Svlloclism I 
(1) Socrates is a man. 
(2) The man is mortal. 
(3) Then, Socrates is mortal. 
(1) states that Socrates is a member of class man; (2) states that all the members of class man are 
members of class mortal, and, finally, (3) states that Socrates is a member of class mortal. 
With Contemporary OO (COO) terminology the syllogism becomes as follows: (1)Socrates is an 
instance of class man; (2)Class man is an instance of superclass mortal; (3)Then, Socrates inherits to 
be mortal (inherits the mortal condition). 
In the above processes the only meaningful elements are real or imaginary instances (entities) and 
groups of these instances. This is the result of the fact that Mr. Concrete only considers meaningful real 
values A i, Bj ..... classes formed with these values and classes of classes. For Mr. Concrete properties 
considered ~y their own, independently of the entities that fulfill them, are not meaningful. 
THE FIRST PARADIGM - COMPREHENSION REASONING 
A COMPUTER WITH OO REASONING.- We are going to study comprehension reasoning. It is the 
basis of all our work and is the first paradigm behind OO. As far as I know, a theory of logic of 
comprehension reasoning does not exists. So, we are by our own! 
A first step to use objects in a conscious way is to clearly understand what comprehension reasoning 
is. This is simple but is not easy: we will need to explain the obvious. People use comprehension 
reasoning everyday, but this is so obvious and so natural to them that they are not aware that they are 
reasoning that way and, of course!, they are not aware of how they manage to do that. 
Lets return to Mr. Concrete, represented in Fig.l, supra. We are going to make up a story (that 
probably is false) with the purpose of clarifying some ideas. We left to the reader the satisfaction of 
finding out the complete and true story... Lets see our story. 
"As time goes on, Mr. Concrete grows up. Mr. Concrete creates a Stock of Cards, performs many 
ontological acts, forms "classes" (files of cards), makes a new card (man, blue, white,..pl, P2=.=-)- 
correspond to each one of these classes and saves these cards (the cards of classes man, blu~, wSite, 
red,...) in his Stock of Cards. Sometime later, these new cards (man, bleu,...) begin to become 
meaningful by their own (without the need of doing ontological acts) and now he call them properties. 
Mr. Concrete continues growing up. As a result of an increase of the precision of his sensors, Mr. 
Concrete directly detects properties and now he can directly detect if an entity fulfils a given property. 
As time goes on, the Stock of Cards of Mr. Concrete grows. One day he realizes that his reasoning 
(the works of his LU) uses cards that already are in his Stock. This has interesting implications. Why 
should he use again his sensors, form a class (e.g. class "man") to obtain card "man", if he already has 
card "man" in his Stock of Cards? Obviously, he will use his old card directly, without repeatina the very 
complicated process of making "man" meaningful. That way, an important qualitative shift occurs. Mr. 
Concrete begins to compare and to group properties directly, without any relationship with the entities, 
real or imaginary, that are, or could be, described by these entities. 
The Logic Unit of Mr. Concrete also improves. Groups of properties became meaningful to him and, 
that way, Mr. Concrete begins to reason at the formal level of thought. Then, Mr. Concrete becomes 
Mr. Formal." Later on we are going to continue our story. Lets see what is going on. 
The direct detection of properties is a matter of everyday. We directly detect (know) that John is a 
man independently of any group of men. In order to understand what a property means we use a 
dictionary. We do not need to form the class of all men in order to understand what man means. In a 
similar way, in order to know and understand what a triangle is we do not look for all the triangles T1, 
T2 .... that exist or could exist, in order to find out what they have in common. We, simply, look for the 
definition of triangle, which is a group of sentences which state the properties that triangle fulfils. 
The capacity to directly detect, and reason with, properties is the beginning of a great qualitative shift. 
Fig.3 represents a computer that operates ("reasons") in comprehension and shows the principal 
elements of comprehension reasoning. Lets study it. It has the following parts. 
15(I)u - STOCK OF CARDS.- The 
computer has a Stock of Cards with 
capacity to reproduce the cards as 
many times as needed. 
- Under the usual interpretation, each 
card is a "property" (the capacity to 
reproduce the cards means that each 
property can be used in different files 
of cards). 
The Stock of Cards is the Universe 
of meaningful properties (U). 
Sometimes the Stock of Cards 
contains only a finite number of cards. 
The capacity to reason with only a 
limited number of properties is one of 
the major strengths of Mr. Formal 
Logic Unit. 
(2)SYSTEM OF SENSORS.- The 
sensors make one or several cards of 
the Stock of Cards correspond to 
each external and real individual B i, 
Cj .... (i,j,k = 1,2,3,...). These cards are 
kept, respectively, in files Bis, C j_s .... 
- Under the usual interpret~tio-n', these 
cards are properties of the real entities 
B i, Cj,.. that were detected by means 
of ontological acts clone by the 
sensors. 
(3)MANUAL INPUT.- We have 
different types of inputs. 
(3.1)Definitions.- Is a sentence or 
group of sentences that allow to form 
directly, without the use of the 
sensors, files of cards As, B s .... 
Under the usual interpretation, these 
sentences define objects A,B .... 
whose comprehensions are files As, 
B s~... I I. 
Hr. FORI4AL i 3 
Sensors(2) I 
[3 
REALITY 
INPUT 
MANUAL (3) 
qroups of cards 
Processinq Unit Loqic Unit(4) 
compre- 
hensions .LLEJ.LL A U_LLLLL B I I  oups of cards 
sentences Printer Unit(5) [ l~ic Unit 
It,,o//I Stork uIz) ! 
"" of Cards 
c>"B fulfils pj" 
>'A fulfils Pi" I 
I 
(6)OnaECT 
[--] NETASYSTDI Fig.3 SYST~ 
The definitions -at the formal level- do not refer to real or imaginary entities (Bj, C k, etc.). The 
definitions, simply, unite properties into a whole (e.g., into 6..~). The meaningfulness-of a defined entity 
depends only on the non existence of contradictory properties in its comprehension, and this is 
independent from any real or imaginary reality which the definition could refer to. 
By the way, this grouping of properties is what the OO people do when they define objects. They 
greup data (properties) and functions (relations) to define an object. Any grouping of (non contradictory) 
data and functions is an object. 
Notice that for Mr. Concrete "definition" means a different thing: a definition (of an entity or value Ai) 
is a statement that allows to individualize (between real entities or values A 1 ,A 2 ..... B 1 .... ) one, and only 
one, value A i. For Mr. Concrete the meaningfulness of a definition depends on the existence of real 
entities or values described by the definition, while Mr. Formal understands definitions independently of 
these values. 
(3"2)Affirmation "A fulfils p".- Affirmation "A fulfils p" is another manual input. It means "A contains 
16p", where A is the comprehension of object A and p is a property contained in U (the Universe of 
Properties). For example, "Pnnter pnnts 4 copies" means that comprehension of Pnnter contains 
roperty p or, whic, h is the same, object Pnnter fulfils property p of to pnnt 4 copies . 
• 3)Affirmation 'A is a B".- "A is a B" means "A contains all the properties contained in B", where A 
and B are, respectively, the comprehension of objects A and B. For example, "the triangle is a polygon" 
means that triangle fulfils all the properties that polygon fulfils. 
(4)LOGIC UNIT LU. Let A...~ be a file of cards (a file formed through a definition or a file formed through 
the sensors). LU makes a file A_ correspond to file A__s, such that A contains all the cards contained in A...~. 
- Under the usual interpretation, the cards contained in A and not contained in A_.s are "deduced 
properties". In a broad way, we are going to say that all the properties of A are deduced properties. 
- The deduction is done considenng only groups of properties A._.~, B_.~ .... independently of real entities. 
Any ontological act is needed to carry out a deduction. 
- LU, in pnnciple, has no way to differentiate a file A._.s (which was filled manually) from a file B s (which 
was filled by the sensors). LU applies equally to both files. At the comprehension level sometimes 
there is not way to differentiate science from science fiction! A "tnangle that speaks English" is as 
meaningful and valuable as an "equilateral triangle"! 
- By the way, notice that, in spite of G0del's incompleteness theorem and similar ones, LU will always be 
able to deduct all the properties that a defined object fulfils. If a property ~k can not be deduced from 
A_..s then, simply, object A does not fulfil Pk- There is no contradiction in that'. 
(5)PRINTER UNIT PU. A Pnnter Unit PU forms part of Logic Unit. PU makes it correspond to: (1)each 
file A, _B .... a symbol A, B... and (2)each card a symbol Pl, P2 .... 
(5.1T When a card, to which a symbol Pi corresponds, is contained in file A_, PU will print (when asked) 
"A fulfils Pi is true" (or, simply, "A fulfils Pi"), and, if the card is not contained in file A, PU will print "A 
fulfils Pi is false". 
- Under the usual interpretation, A is an "object" whose comprehension is A, and Pi is a property. 
(5.2) When all the cards of file B are contained in file A, PU will print (when asked) "A is a B is true" (or, 
simply, "A is a B"). When there is a card contained in file B which is not contained in file A, PU will print 
"A is a B is false". 
Under the usual interpretation, A and B are objects whose comprehension are, respectively, A and B. 
Formal and concrete thoughts have opposite meaningfulness paths 8. At the concrete level, through 
the sensors Mr. Concrete starts from real entities and from these entities he constructs "properties" 
(classes). The movement is of .abstraction, from concrete entities toward properties. At the formal level 
the movement is the opposite. Mr. Formal starts from properties and from them, through specifications, 
he constructs objects. Sometimes Mr. Formal construction of objects is done focusing reality, but always 
the meaningfulness of the objects is independent of reality, whatever reality is or could be. 
We are going to see, later on, that this point is not a simple theoretical one. It has valuable 
consequences. The difference between concrete and formal reasoning leads to very different 
methodologies for System Analysis and Design. In general, the methodologies developed at the formal 
level will be simpler, more efficient and more fnendly than those developed at a concrete level. 
(6)OBJECT SYSTEM AND METASYSTEM.- We are going to maintain the classical distinction, done by 
the logic-mathematicians, between Object System and Metasystem. The Object System is formed by 
the computer and the inputs and outputs of the computer (items 1 to 5). The Metasystem is formed by 
reality, Object System, we and our affirmations about Object System. Sometimes this distinction is 
necessary in order to avoid misunderstandings. In this paper we are not going to use it. 
The reasoning in comprehension is recognized by philosophers. "To reason in comprehension is, 
for the spirit, a more natural and more essential procedure... "9. 
T.HE FOUNDATION OF INHERITANCE.- Lets see Syllogism I, supra, in comprehension. In Fig.4 
each rectangle represents the comprehension of an entity (the group of properties that the entity 
fulfils). 
17"Socrates is a man" means that the comprehension of Socrates contains property man. "The man is 
mortal" means that the comprehension of man contains property mortal. The conclusion is that 
property mortal is in the comprehension of Socrates, that is, "Socrates is mortal" is true. 
If we study the groupings of properties (and relations) done at the formal level we will realize that 
they are not arbitrary. It is possible to notice several rules that apply to them. The knowledge and 
use of these rules is of the most importance for the OO people. One of these rules is the following. 
Principle of the Sylloqism.- If A is more 
abstract than B 10, B fulfils ("inherits") all 
the properties pz deduced from A. 11 Socrates 
This principle was used in the syllogism represented in 
Fig.4. Object A=man is more abstract than object me.__n 
B=Socrates, and property pz=mortal was, in some way, 
deduced from A. The Principle states that, then, object B lortal 
(Socrates) fulfils property pz. That is, "Socrates is mortal" is 
true. With CO0 terminology this Principle would be the 
following: 
Syllogism in Comprehension Pnnciple of Inheritance.- If objects Bj Fig.4 
(j=l,2,...) are instances of class A, the Bj 
inherit all the properties that A fulfils. 
The OO people consider inheritance as "the major feature distinguishing an OO system from other 
programming systems "12. Of course it is a major feature! It is an OO version of the syllogism, which is 
the basic principle of human reasoning! Later on we are going to see this with more details. 
CLASSES, SUPERCLASSES, 
SUBCLASSES, ... 
We saw that we can reason in two 
different ways: in extension, as Mr. 
Concrete (MrC) does, as well as in 
comprehension, as Mr. Formal (MrF) 
does. Then, which way are we going to 
use in System Analysis and Design? At 
a very first thought the use of an 
extension approach seems to be 
advantageous. 
Extension reasoning have, over 
comprehension one, the advantage that 
it was studied by the logic- 
mathematicians, who developed very 
valuable theories about it. By using an 
extension approach we would be able to 
take benefits of these studies and 
developments. ~r. Concrete Mr. Formal 
Extension Co@rehension 
I 
| 
class of values ] 
[John,~ter,... ] 
l = [Pi] group of 
properties 
l llell 1 instance of is a 
Socrates Iprops. =S comprehension 
of man 
co@rehension 
of Socrates 
Fig.5 
However, the exclusive use of an extension approach has undesirable collateral effects. Lets return to 
sentence "Socrates is a man". 
(t) Socrates is a man. 
The way MrC and MrF interpret sentence 1 is represented in Fig.5, where [Pi] is the set of all men and 
man is the comprehension of man. For MrF sentence 1 means that Socrates fulfils property to be a 
man (or, which is the same, comprehension of Socrates contains property to be a man). This is 
represented in Fig.5. Relation is_a means that S (the comprehension of Socrates) contains all the 
properties contained in man (the comprehension of man). 
18On the other side MrC, in order to understand sentence 1, translates it into the following sentence: 
"Socrates is an instance of the class of all men". The final result is that "Socrates" means the same at 
extension and at comprehension, but "man" means different things. For MrF "man" is an obie~ defined 
through its comprehension. For MrC "man" is a class of values or "instances" (and Socrates would be 
"an instance of the class of all the man"). 
Lets see what happens with MrC interpretation in situations more complex than sentence 1. Fig.6, 
infra, represents in comprehension and in extension some very simple objects of geometry, such as 
Figure, Polygon, Circle and Triangle. Notice the simplicity of MrF interpretation and the complexity of 
MrC interpretation. While MrF only uses "objects", MrC uses different groups of entities ("classes", 
"superclasses", "subclasses", "instances",...) and a non very well explained cnteda to define these 
groups. 
MrF side, in Fig.6, is straightforward. It express the way everybody use the objects of geometry. 
"Tnangle is a Polygon" means that Tnangle fulfils all the properties that Polygon fulfils. In MrF column 
of Fig.6 the arrow between Polygon and Triangle means, simply, that property Polygon is in the 
comprehension of Tnangle. The same applies to all the other objects. Polygon is a Figure means that 
Polygon fulfils all the properties that Figure fulfils, etc. 
MrC side, in Fig.6, is complicated and requires an explanation. Lets start from the beginning. The 
beginning of MrC is a domain of meaningful values (specific geometnc figures) T 1 , T 2 .... (tnangles), S 1 , 
S 2 .... (squares), etc. The "meaningfulness path" of MrC is (1).>(2).>(3).>(4), which is indicated in 
Fig.6. Lets analyze item by item. 
Notice: in the discussion that follows "value" means an item (an entity) meaningful, valid, for MrC. 
(1) triangles.- T 1 , T 2 ..... S 1 , S 2 .... are values. They are the starting points of MrC cdteda of 
meaningfulness. 
(1).>(2) triangles->Tnangle.- Here the situation is similar to the one of sentence "Socrates is a man". 
The relation stated in the sentence "T1 is a Triangle" is interpreted by MrC as meaning "T 1 is an instance 
of class Triangle". The extension of MrF "Triangle" is class [Ti] of all the triangles. 
(2) Triangle.- MrC has the capacity to form classes of values. Tnangles T 1, T 2 .... are values and, 
then, class [Ti] of all the T 1 , T 2 .... also is a value. In a similar way, class [Sj] of all the squares and 
class [Ptk] of all the pentagons are values. MrC will call these values, respectively, "Tnangle", "Square" 
and "Pentagon". 
(2).>(3) Triangle->Polygon.- Here the situation also is similar to the one of sentence "Socrates is a 
man". The relation stated in the sentence "Triangle is a Polygon" is interpreted by MrC as meaning 
"Triangle is an instance of class Polygon". In a similar way, "Square is a Polygon" means that Square is 
an instance of class Polygon. The final conclusion is that the extension of MrF "Polygon" is class 
[]'dangle, Square, Pentagon .... ]. 
(3) Polygon.- MrC Polygon is a class of values and, then, it also is a value. It is a class of the values 
Triangle, Square, Pentagon ..... that is, it is a class of classes [Ti], [Sj], [Ptk] .... Classes of classes are 
called, by the OO people, superclasses or metaclasses. 
(3).>(4) Polygon->Figure.- In a very similar way, MrC, "Figure" is the extension of MrF "Figure". It is a 
class of superclasses and it would be a "super-superclass"t 
(3).>(5) Triangle -> Equilateral Triangle.- Equilateral Tnangle (ET) is the class [ETi] of all the 
equilateral tnangles ET 1 , ET 2 .... Its elements ET 1 , ET 2, etc. are instances of class Tnangle. It is 
called a subclass of class Triangle. 
In conclusion, MrC interpretation uses "instances", "classes", "superolasses" and "subclasses" to 
interpret MrF structure of objects. While for MrF the meaningful entities always are, simply, objects, for 
MrC "object" is only a name that sometimes refers to instances, other times to classes, another times to 
superclasses, another times to... 
Notice 1.- MrC interpretation is used in CO0. 
Notice 2.- Mr C interpretation is subjective. Polygon, which for MrC is a superclass, for other Mr. 
Concrete (MrC2) could be, e.g., a class 13. This makes MrC reasoning not fnendly and sometimes 
difficult to be understood. On the other hand, MrF reasoning is objective. Another "MrF" (MrF2) will do 
19II i 
SUPER- 
SUPERCLASS 
METACLASS, 
SUPERCLASS 
CLASS 
SUBCLASS Mr. Concrete 
EXTENSION I Mr. Formal 
COMPREHENS I ON I i i D 
(each rectangle represents the 
comprehension of an object) 
/ ''1 F i gure i 
i], [cj] .... ] 
ce_of 
I ,ll ,s_a I~ i i i 
t (3) Circle, ~ P I ,o,,0oo !1, 
I P = [[Ti].[Sj],[Pt_k] .... ] I = [P1,P2,P3 .... ] 
! ce_of J 
F'7"~77-11 Is tsJ] II I,* [Pt_k~ 
' i 
 Equi Tria l is_a 
nce_of linstance_of 
till ; 
SI,S2 .... 
triangles squares IEquilateral[ Triangle I ~1 i s_a 
Circle J 
is_a 
Square I 
li s_a 
$1 
square $1 
I $_a 
i 
I,, ! triangle T1 
[Xi] = class of elements Xi (i = 1,2,3 .... ) Fig.6 
20the same classification, because MrF classification depends only on the properties the objects fulfil 
(contrasted with MrC classification, which depends on the entities of MrC domain of values). 
Notice 3.- In order to do a reasoning (e.g., in order to do the classification) MrC needs to know each 
one of the instances, while MrF does not. The quantity of information MrC uses to do a reasoning is 
much more than the quantity of information MrF uses. MrF reasoning is the most efficient. 
INHERITANCE AND THE HIERARCHICAL STRUCTURE OF OBJECTS.- We wonder why the 
"hierarchical structure" of objects is so important? It is important because it diminishes the work of MrF 
Logic Unit. MrC interpretation of this is "code reusability". 
The big advantage of comprehension reasoning is efficiency and reasoning capacity, which extension 
reasoning lacks. Lets call "p" the property "to have angles whose sum is 180 degrees". How can we 
prove, in Euclidean geometry, that al_J the triangles T1, T2, T3 .... fulfil property p? 
MrC way to prove this is to prove it for each instance (T1, T2,...) of Triangle, one by one. This 
means that MrC will have to do a specific demonstration or procedure for each particular instance T1, 
T2 .... MrF way is very different. 
MrF derives property p from the properties stated for Triangle in the definition of Triangle. This is the 
only thing MrF does and he will do this only one time. The conclusions/results of his reasoning will apply 
to all the instances T1, T2 .... of Triangle. This is a consequence of the fantastic Principle of Syllogism 
(PS): if A is more abstract than B, B fulfils ("inherits") all the properties deduced from A. In our case, 
Triangle is more abstract than, e.g., T1 (because T1 is a triangle, that is, the comprehension of T1 
contains all the properties that comprehension of Triangle contains). Then, every T i (i=1,2,...) will fulfill 
(will inherit) everything that is deduced from Triangle... 
Later on we are going to study relative entities. We are going to see that relations (functions) are 
properties. That way MrF inheritance, which applies to properties, also applies to relations (functions). 
One of the consequences of PS is the following. Let p be a property that Polygon fulfils. According 
to PS, if Polygon fulfils p, then Triangle also will fulfil p (because Triangle is a Polygon, then Polygon is 
more abstract than Triangle and PS applies). Then, in a similar way, T1 (which is a Triangle) also will 
fulfil p. Translated to extension, this means that if superclass Polygon fulfils p, then the elements of class 
triangle (which is an instance of superclass Polygon) also will fulfil p. In a similar way, the elements of 
subclass Equilateral Triangle, as well as value Ti, also will fulfil p. In general, then, "a class can inherit 
operations from superclasses (those above it), and its operations can be inherited by subclasses (those 
below it)"14. This is the Inheritance paradigm of the OO peoplet 
A typical "syllogism in extension" (SE) is the following: (1)All the triangles fulfil property p; (2)T1 is a 
triangle; (3)Then, T1 fulfils property p. 
However, is this really a deduction? 
The problem is: how did we manage to 
know that all the triangles fulfil property 
p? Of course, if we already know that 
all them fulfil p we can use SE. But, 
then, what SE will do is a simple 
operation of retrieval, a database 
operation, instead of a deduction. 
SE does not deduct nothing. It only 
shows what we already knew. This is 
why MrF is intelligent, while MrC is not. 
MrF deducted that all the triangles fulfil 
p. MrF has deduction capacity, while 
MrC does not!. 
Inheritance is closely related with 
relation is a. Relation is_a was used by 
MrF to structure the objects in Fig.7, 
infra (that is, to create an hierarchical Malmal 
Person 
I Female 
I .... 
~Fig.7 
21relationship among these objects). John is an Student, Student is a Person, Person is a Mammal, etc. 
This is the extremely simple interpretation of comprehension reasoning. Relation "is_a" relates the 
objects into a hierarchy, and this relation automatically guaranties inhedtance! 
With MrC it is different. MrC does not understand properties and, then, he also does not understand 
comprehensions (which are groups of properties) nor relation is a (which is a relation between two 
comprehensions). As a result, MrC can not make the structure of objects in the same way as MrF does, 
using the relation is_a. On the other hand, MrC understands inhentance. He understands that Tnangle 
has to inherit the properties that Polygon fulfils. Then, he can use inhentance to design classes and 
superclasses, because, e.g., class Tnangle and superclass Polygon have to be designed in such a way 
that class Tdangle fulfils the data and functions of superclass Polygon. MrC needs to do this complex 
process as a result of the limitations he has. MrF way is, obviously, the most simple, easy and natural. 
MrC way is used in CO0. According to the CO0 people "class inhedtance makes it easier to 
manage hierarchical relationships among concepts", "class inheritance organizes collections of 
classes... "15, and they used this to define a hierarchy of objects. The diagram of Fig.7 was not made by 
MrF. It was given in a paper about 0016 as an "example of Inhedtance Hierarchy". 
By the way, the reader could do the following very suggestive test. In contemporary books, papers 
and/or articles about OO, he could look for diagrams used to give examples of classes, superclasses, 
inhentance, etc. (e.g., the diagram of Fig.7). Then, lets interpret these diagrams in comprehension! In 
spite of the complicated way generally devised to design these diagrams, most of the times the reader 
will find out that in comprehension they are, in general, incredible simple and obvious and could have 
been designed directly... If the reader does the test, the following two observations could be useful. 
(1) Generally the objects of the diagrams are related with the relation is_a. Another important 
relation that the objects can fulfil is, e.g., "has". A House has Rooms, has Roof, has Windows. A 
Client has Name, has Address, has Credit. 
(2) In practice, the reasoning of the CO0 people will not be MrC like, but MrF like. Everybody uses 
comprehension reasoning or a mixture of comprehension and extension reasoning. The diagram of 
Fig.6, supra, is a comprehension diagram apparently done with an extension methodology. 
THE SECOND PARADIGM - RELATIVE ENTITLES 
RELATIVE ENTITLES - THE FORGOTTEN ENTITLES.- Relative entities are the second paradigm of 
OO. In this paper we are going to explain what relative entities are and we are going to show that the 
objects of OO are relative entities. We are not going to develop the logic that fit these entities. 
Supra we studied that any non contradictory group of properties is the comprehension of an object. 
Relations are a special type of properties and, then, can be in a comprehension. Relative entities are 
objects whose comprehension contain relations. In extension these objects package data and functions. 
Lets assume that we have a Printer model Laser2. The printer has a Switch with ten positions 
(1,2 ..... 10), and prints the quantity of copies of the position of the Switch minus one. The following 
definitions define the entities involved in this. 
Definition 1 
1.1 Q is the value of the position of a switch. 
1.2 Q is an integer between 1 and 10. 
1.3 P is a pnnter, model Laser2. 
1.4 P prints Q minus one copies. 
Lets consider the following values. 
P1 = printer, model Laser2 and prints 0 copy. 
P2 = printer, model Laser2 and prints t copy. 
P3 = printer, model Laser2 and prints 2 copies. 
Mr. Concrete (MrC) Interpretation.- Lets see how Mr. Concrete, before his growing up, could 
interpret each one of the sentences of Definition 1. 
Sentences 1.1 and 1.2.- Q is undetermined. Q can be any one of numbers 1,2 .... or 10. 
Sentence 1.3.- This sentence states data for P, but P is undetermined. P could be any one of P1, P2 or 
22P3. 
Sentence 1.4.- P is object P1, P2 or P3 when Q is, respectively, Q1=1,Q2=2 or Q3=3. This is "a set of 
ordered couples "17 [(P1,Q1), (P2,Q2) , (P3,Q3)] • This is a function, which to each value of Q makes it 
correspond to a value for P: P is value P1 that prints 0 copy when Q is equal to 1, while P is value P2 
that prints 1 copies when Q is equal to 2, etc. 
That way, when MrC considers P as being one entity (an "object"), he packages data and functions 
(the data stated in sentence 1.3 and the function stated in sentence 1 •4). This conglomerate of data and 
functions is what, according to the OO people, characterizes the objects of OO. However, for our MrC P 
is not an entity. P only is a package, a conglomerate, that "encapsulates" data and functions. 
When MrC considers P as an object, as an entity, he is making "an abstraction" and instead of groups 
of concrete meanings (Pi,Qj) he considers a more abstract entity (P). However, this abstraction is not 
complete (in practice, this vanes from an author to the other)• He will not arrive to formal meaning P, 
which is one and only one entity (we are going to see this infra). The abstraction stops at a medium 
term. He considers that P sometimes is P1, while another times is P2 and another times is P3. He will 
say that P has "polymorphism". 
Mr. Formal (MrF) Interpretation.- Lets retum to our story of the growing up of Mr. Concrete. Now 
Mr. Concrete is Mr. Formal. Mr. Formal detects properties directly (while Mr. Concrete only detected 
whole obiects or values). Then, what is going to happen? Mr. Formal is going to perceive that when Q 
is equal to 1,2 or 3, the only thing that changes (in P) is property pr (= "the quantity of copies P prints"). 
The fact that Mr. Formal considers switch Q meaningful by their own, independently of the specific 
values Q refers or could refer to, leads to an important step forward in Mr. Formal reasoning capacity. 
The relation "to print Q-1 copies" will be understood directly and independently of the extension of Q and, 
then, it will be understood directly and independently of the set of ordered couples that fulfils or could 
fulfil the relation. As a result, it will mean one, and only one, property. In other words, relations are 
properties and, as such, form part of the comprehension of the entities. Then, both sentences 1.2 and 
1.3 state properties of P and Definition 1 defines one, and only one, entity P. 
From now on, Mr. Concrete will think and reason with relations in the same way he does with 
properties, that is, independently of the values these relations describe or could describe. 
It is the same entity P that prints 0, 1 or 2 copies. This entity is a relative entity. Sometimes P 
prints 0 copies, another times it prints I copy and another times it prints 2 copies. 
A relation is a property that is expressed by means of one or more objects. Property ''to print Q 
copies minus one" is a relation with object Q. As any other property it can be in the comprehension of 
an object. Object A is relative to object B when a relation with B is essential to A. If A is relative to B, 
properties pr ("relative property") and q will exist such that "A fulfils pr" is false while "A fulfils pr if B 
fulfils q" is true 18. 
In the above example, P fulfils a relation with Q ("to print Q copies minus one") and, then, P is 
relative to Q. Let the prope~y pr be 'to print three copies" and the property q be "to be number 4". "P 
prints three copies" (that is, "P fulfils pr'') is false, because pr is not one of the properties stated for P in 
its definition, neither can be deduced from these properties 19. On the other hand, "P prints three copies 
if Q is four" (that is, "P fulfils pr if Q is q') is true. 
Through the conditional we limit affirmation "property pr is contained in the comprehension of object 
P" (or "P fulfils pr") only to cases or moments in which it is true. In sentence "P prints three copies if 
Q=4" we affirm that property "to print three copies" is contained in comprehension P when Q=4. When 
Q is not 4 this sentence does not affirm anything. Sometimes P fulfils pr and sometimes it does not. It 
is the same object P in both cases and there is no contradiction in that! Classical logic needs to be 
expanded in order to fit relative entities. 
AN EXAMPLE OF A RELATIVE ENTITY.- Lets see a very simple example of a relative entity• Mr• 
Concrete (MrC) and Mr. FovTnal (Md =) met at Punta del Este beach and discussed about the situation 
described in sentences (1), infra. In order to be more dramatic, lets assume that the domain of 
meaningful values of the reasoning of Mr. Concrete contains only independent entities (this is, by the 
way, the standard situation at contemporary theories of logic). A transcription of the talk follows. 
23(1) P is a point that moves from point A to point B. 
P is in A when Time = TA, and is in B when Time = TB. 
MrC.- "(1) means a correspondence between elements of classes [Pi] and [Tj] (i,j=1,2,...), where Pi 
are different points in space and Tj are different values of Time. Each one of these values Pi is a 
determined point in space and it is independent of time: these Pi are the "points" that are studied in 
Euclidean geometry. P is point P1 at time T1, while it is point P2 at time T2, etc. P1 and P2 are, in 
general, different." 
MrF.- "This is not an interpretation that agrees with common sense. P is not an entity which is in A 
(at time TA), after that it disappears and, after that, it appears in B. According to naive common sense it 
is the same point or object which is in A (at time TA) and after that is in B (at time TB). We do not have 
here a correspondence among several entities and values of time. We have only one entity P which is, 
simply, relative to Time. Sometimes P (the comprehension of P) contains property "to be at point PI", 
while another times does not." 
MrC.- "What's that of an object that sometimes fulfils a property and another times does not? This 
does not exists in any Logic (in any theory of Logic). This is a very confuse subject and is not scientific 
thought..." 
MrF.- "1 do not know why nobody developed a Logic that fits relative entities (objects). If it is a 
confuse subject, lets make all the distinctions needed to make it clear! If it is not a scientific thought, 
lets study it and lets make it scientific!.." 
MrC.- "Your affirmation that P remains a same entity is only an illusion. When you see a movie, 
e.g., you think (and Mr. Concrete stressed this word) that the movement is continuous. However, in 
reality it is formed with a succession of definite states P1, P2,..., each one of which corresponds to a 
different picture. Here, with P, we are in a similar situation. Your consideration that it is a same entity 
P is only apparent ..." 
MrF.- "1 am not a philosopher. What you say is too complicated for me. I am a common man. For 
me P continues being the same existing entity since I saw it. This is the way I understand P. P is, 
simply, one and only one entity that moves, that changes and can do different things as time go on." 
The talk continues for a long time, as an excuse to continue looking at the "point", which happens to 
be a beautiful girl with a yellow bikini who passed by... Who was right? 
MrC, in order to state meaningful sentences, needs to refer to reality. Our MrC believes that reality is 
formed only with independent entities, such as points P1, P2 ..... and then he considers that the 
movement of P is a correspondence between different static Pi and different values of Time. 
On the other hand, MrF (MrF's Logic Unit) is looking for a simple, efficient and meaningful description 
of reality. MrF does not need to know exactly how reality is in order to do this, because his reasoning is 
not tied to reality. MrF reasoning has a character hypothetical deductive and is meaningful 
independently of reality. MrF considers P as being a same and meaningful entity during all the moments 
of time between TA and TB, independently of the specific properties pr that P could have at different 
moments of time. For MrF P is one, and only one, entity relative to time 20. 
The point here is not how reality is. The point here is that MrF understands what he is talking about 
and, then, comprehension thought and relative entities are meaningful for him. By the way, they are 
meaningful for everybody. Now then, in the same way that everybody considers that a real person 
behaves in different ways depending on external circumstances, we can state and put in a computer 
sentences whose subject is an object which will behave in different ways depending on "external 
circumstances". In general, these "external circumstances" will be the properties that entities which the 
object is relative to fulfil. The OO people already noticed this and call it "polymorphism". 
METHODS AND MESSAGES.- How could we manage to implement an object in the computer (in Mr. 
Formal)? Lets see the layout of an implementation at the "OO way". Lets put the following conditional in 
the computer, where P and Q are the objects defined in Definition 1, supra. 
II. "P prints 3 copies if Q=4." 
24P and Q are objects whose comprehension are, respectively, 
files _P and _Q. Notice that file Q_ does not (always) contain the 
card "to be equal to number 4". Then, we enter, in the 
computer, the conditional II. Lets see, step by step, how the 
logic unit of MrF could process it. 
(1)"if Q=4" means that we are putting card "to be equal to 
number 4" in file Q. This card was not contained in file _Q 
because it is not essential to Q to be equal to number 4. 
(2)Q sends a "message" to file P (the comprehension of P). 
(3)~ receives the message. P has some method by means 
of which it selects/defines a new card pr, puts it in P and does 
whatever COiTesponds to the card. "Method" refers to the 
particular implementation, in the computer, of the relation with 
Q that P fulfils. In our example, card pr (= ''to pdnt 3 copies") was selected. n~u~ inv~ .input ~1) 
IIIIIIIIII (2)Q file of c~& 
....... ~ alessa~ 
file of e~r~ ........ 
Fig.8 
A CONTRAST BETWEEN TWO BASIC WAYS OF REASONING 
II reason i ng reason i ng 
reality not necessary at formal reasoning domain(s) of values 
domain of values domain of values domain of values (raked as given) 
value Ai an entity whose comprehension is ~ an element of the domain of values 
property p property p ..... not used .... 
i 
comprehension A group .~ of properties .... not used .... 
an entity defined by 
: object its comprehension A a value Ai 
i independent entity entity -1- a value Ai 
relative entity i entity, object .... not used .... I i 
relation relation (- a property) correspondence (Ai,Bj .... ) 
Reazon i ng 
- base: properties values 
- move toward: objects, entities classes of values (= "atributes") 
- procedure to move: specification abstraction 
Sentences 
- A fulfills p 
-A isaB 
-A - p 
-B 
- "true" A. contains property p 
Acontains all the elements of 
object A 
property p 
object B 
conditioned; unconditioned A is in class p 
A is an element of class B 
a value of a "domain of values" 
a class of values 
a class of values 
(only) unconditioned 
= statement which individualizes 
a statement stating one, and only one, value 
definition a grouping of properties among a domain of values 
level of thought 
(3.Plaget theories) formal level of thought concrete level of thought 
typical example O0 (our proposal) I contemporary O0 
-1- IN THIS TABLE WE ARE RESERVIN6 THE WORD OBJECT TO RELATIVE ENTITIES, 
WHICH IS THE STANDARD APPROACH IN CONTEMPORARY OO. 
Table I 
25"If Q=4" means that we are adding a property to file Q (the comprehension of Q). When we change 
the properties that Q fulfils, we are also changing the properties that P fulfils. This is a consequence of 
the relativity of P to Q. As a result of being P relative to Q, the comprehension of P is not an isolated 
group P of properties. It is an interconnected group (_p_, _Q) of groups of properties. CO0 handles this 
through messages and methods. 
The terms "message" and "method" apply to some of the possible implementations of the conditional 
in the computer. Although these terms are not needed to work with objects, they could be useful for 
these implementations. On the other hand, the use of the conditional (instead of "message" and 
"method") has the advantage of greater applicability (generality), simplicity and friendliness. 
Table 1 shows a summary of main concepts of comprehension and extension reasoning. Table 1 
clearly differentiates both types of reasoning. This is necessary to avoid misunderstandings. 
THE THIRD PARADIGM - INTUITIVE REASONING 
FIRST PROPOSAL - NEW CONCEPTS.- Table 2 shows the principal concepts utilized in CO0 and, for 
each one of them, it shows a concept of the formal level. Our first proposal is, precisely, to utilize of 
these concepts of the formal level instead of the corresponding concepts utilized in CO0. 
Our intuitive reasoning, at the formal level, organizes data and relations in objects. This is done 
naturally and most of the time in an unnoticed way. Lets put it in a funny way: our intuitive reasoning, at 
the beginning of our most advanced stage of intelligence development, managed to read about OO and 
now follows an OO approach, but it forgot to tell us about it! This is why when we reason at the formal 
level in a conscious way all the concepts of OO become extremely simple and obvious (this can be 
verified in Table 2). Concepts such as property, entity, comprehension, relation and syllogism, which we 
are proposing, are externally elementary concepts everybody knows and uses. 
Same very practical consequences follow from this. "Class", "superclass", "metaclass", "subclass", 
"encapsulation", "polymorphism", "method", "message" and "inheritance" are extension concepts which 
are not needed to be used in OO. Simple and naive everyday concepts are enough to deal with objects 
and OO. OO can be developed, taught and implanted in the computer in a very friendly, natural and 
meaningful way! 
SECOND PROPOSAL - OO REASONING.- The change of concepts proposed supra is, no doubt 
about, important. However, it is not the most important proposal of this paper. Behind this change 
concepts a valuable qualitative shift is involved. It is the shift from extension, concrete reasoning 
toward comprehension, formal, more intelligent reasoning. It is the same shift MrC did when he became 
MrF. 
CO0 concepts are extension, MrC type, concepts. They are meaningful, valid and the reader can 
use them. Then, what is the problem with its use? The problem is that MrC reasoning is not formed 
only with concepts. It involves, furthermore, a specific way of reasoning and working (and, then, it leads 
to a specific way to do System Analysis, Design and Development). His "meaningfulness path" is from 
specific, concrete values toward abstract entities (objects). His "thought movement" is abstraction. 
This contrasts with the meaningfulness path and thought movement of MrF, which are, precisely, the 
opposite!. 
In order to develop a Target System in the computer, MrC needs to begin analyzing his Target System 
at extension, e.g., by means of a Waterfall Model. That way he will know in a concrete, detailed way, 
each one of the specific events/products he has to develop. This detailed description will be used as a 
"Domain of Values", from which he will be able to start his reasoning and to make developments 21. 
After that MrC will encapsulate things (which is equivalent to form a file of cards) and will make 
abstractions in order to define objects (which is equivalent to make a card correspond to the file of 
cards). This is done in order to arrive to MrF way of looking the Target System. Simultaneously, or 
later on, he will put the objects into a hierarchy, in order to obtain reusability (in order to have 
inheritance, which is at the base of reusability). And, finally, if MrC does not stop at a mid-term and if he 
is lucky, he will arrive to the objects and to the hierarchy he was looking for, which are objects and 
hierarchy MrF uses or could use. This is the standard contemporary approach to OO. 
26In each development the very complicated and labonous process MrC did to became MrF (cf. supra, 
"A computer with OO reasoning") is repeated!. 
The precedent analysis explains why "encapsulation", "abstraction", "hierarchy" and "inhentance" are 
considered "the major pnnciples" underlying COO 22. They would allow MrC to arrive to the abstract 
objects MrF uses to reason. Fortunately, OO does not need to be so complicated. 
Soon or later MrC (who 
evolved and now is MrF) will 
ask himself, as he already did 
before, why should he repeat 
the very painful process of 
evolve from concrete entities 
(such as those obtained with the 
Waterfall Model) toward 
abstract entities (objects), if he 
could stay full-time reasoning 
with objects and, then, he will 
not need to make abstractions 
because he will be reasoning at 
the maximum level of 
abstraction that it is possible? 
This situation is more dramatic 
with the computer people. 
Actually, as everybody, 
everyday they reason directly 
with objects. Then, as soon as 
they notice this they will wonder 
(I hope!) why not use their 
natural way of reasoning to deal 
with the objects of the OO 
approach? 
Lets make an appeal to 
common sense! We do not 
need to make abstractions in 
order to understand what an 
airplane is. We understand it 
directly (or we look for 
"airplane" in a dictionary and, 
then, we do not make an 
abstraction but a specification). 
We also do not need to 
encapsulate or "to hide 
information". We make 
definitions, which group 
properties, and any infonnation 
remains hidden in the definition. 
We also do not need to care 
about inhentance: Syllogism 
Pnnciple care of this for us! 
Finally, we always order 
objects into a hierarchy without 
considenng the reusability of 
the deductions we could make 
from the parent entity. TWO DIFFERENT APPROACHES TO O0 
contemporary O0 
type of reasoning: 
extension reasoning 
reasoning movement: 
abstraction 
data 
function (=a correspondence) 
object = encapsulation of 
data and functions 
class A of instances Bj 
superclas A of classes BJ 
subclass A of class B 
inheritance 
message 
method 
hierarchy of objects 
polymorfism 
relationship with intuitive 
reasoning and common sense 
not defined 
logic utilized: not defined our proposa I -~- 
type of reasoning: 
comprehension reasoning 
reasoning movement: 
specification 
property 
relation (= a property) 
(I)statment grouping 
properties = definition 
(2)result of the grouping 
= comprehension 
(3)defined entity = object 
Bj is an A 
Bj is an A 
A is a B 
syllogism 
condition part of a 
conditional 
conditioned part of a 
conditional 
relations between objects 
--- not needed --- 
it is intuitive reasoning and 
it is based on common sense 
logic utilized: 
Object Oriented logic 
I-ALL THE CONCEPTS USED AT "CONTEMPORARY OO" ARE HEANINGUL AT 
'YOUR PROPOSAL"- 
Table 2 
27Why COO does all this work? This is because COO uses extension reasoning and only deals with 
independent entities. It is Mr. Concrete approach. However, the paradigm behind OO is not 
abstraction, nor encapsulation, nor hieramhy, nor inheritance, nor message,... It is a "new" type of 
reasoning, it is OO, intelligent, reasoning. 
Our second proposal follows from the precedent analysis: in order to deal with OO, in any of its 
uses, OO reasoning should be used. "OO reasoning" is our most important proposal. It is Mr. 
Fonrnal reasoning and it has three main key points: (1)it is comprehension reasoning, (2)it deals 
with relative entities and (3)it is intuitive reasoning, at the most advanced stage of our 
intelligence development. Then, System Analysis, Design and Development, as well as the 
corresponding methodologies, should be done using, and based on, OO reasoning. This pinpoints to 
(new) OO methodologies and is a challenge for everybody. 
There is, here, a very intnguing point we should try to clanfy. CO0 was developed at a concrete 
level. Why did the authors do it at a concrete level if at the formal level it is easier and better? Why at 
present it does not exist any theory of a logic of comprehension reasoning, nor any theory of a logic that 
fits relative entities, nor any theory of the logic of intuitive reasoning? These are, precisely, the main 
paradigms behind OO! The following reflections do not intent to be the answer of these questions. I do 
not know the answer. 
OO FOUNDATION.- COO has been developed in an empirical way. The authors used his intuition, 
expertise and experience to develop OO. When they use OO they certainly reason at the formal level. 
However, when they try to ground (or to go deeper in) what they are doing, as well as when they try to 
develop a methodology for a third party, they need to base their developments on cnteda and concepts 
recognized, which includes a Logic they trust and/or is recognized by everybody. Sometimes the use of 
Logic is a must in software development. Intuitive reasoning, when done in an uncritical way and 
without a minimum of distinctions, can lead to misunderstandings and computers do not excuse 
misunderstandings. 
Then, they use contemporary theories and studies of Logic (mainly logic-mathematics, which is the 
most renowned one). This is the only choice they have at present. And here is where the big problem 
is: all contemporary theories of logic are of reasoning in extension and, furthermore, only study 
independent entities! These theories compelled the authors, in an unconscious way, to retrograde to an 
"underdeveloped" concrete reasoning. That way comprehension concepts (e.g., relative entities) were 
replaced by non-finished concepts (e.g., a "conglomerate of data and functions"). This retrogression is 
pnncipally noticeable when they deal with relations, which are always considered in extension as 
functions or as a correspondence between values. The result is a MrC way of dealing with OO, and 
everything becomes complicated and difficult to be understood. That way OO looses one of its best 
characteristics, which is to be friendly. 
Precisely, one of the key and valuable points in O0 is the meaningfulness of the objects. While at an 
concrete individualist side there is no entity which an object could be, at the comprehension side objects 
are meaningful and are relative entities. We can directly reason with/about objects in a meaningful and 
simple way, but we can not use contemporary logic in order to do this. That way the foundation of O0 
merges into a much broader and deeper problem, which is the development and foundation of O0 Logic, 
the logic of our intuitive reasoning that fits the objects O0 uses 23. 
THIRD PROPOSAL - ARTIFICIAL INTELUGENCE.- OO is a great step fonNard in System Analysis, 
Design and Development. It is the step forward MrC did to became MrFo Unhappily, this step is not 
sufficient to have all the benefits of an OO approach. We can use different groups of objects to 
descnbe a same Target System, but not all these groups are equally efficient and fnendly, nor all them 
have innovation capacity, nor all them have the same quality. If productivity and quality are our targets, 
the right selection of objects will become a very cntical point. 
We need to have some criteda for object planning and definition. We need methodologies that lead 
to the definition of the dght objects, instead of methodologies which only lead to anght definition of 
obiects. This is the great challenge. Then, what to do? 
28Different cnteda can be proposed for objects definition. This is a very sensitive area and probably all 
the possible cdteda should be used. In practice, however, I had used mostly a very specific cdteda, 
which follows from the precedent analysis. It is my Third Proposal. I am proposing the reader to use it 
as a main criteria for objects definition. It merits special attention because it has very interesting and 
useful collateral effects. 
Our intuitive reasoning (at the formal level) is OO and we know how the logic of our intuitive OO 
reasoning is. Then, why not use the millenanan human brain experience in OO? This can be done! 
How the AI (Artificial Intelligence) people manage to design a system? They look for the people that 
are Senior Specialists (SS) in the Target System they have to put in the computer. They manage to 
know the data and functions (rules, procedures) SS use, and they put in the computer these data and 
functions. OK. On the other hand, we know that SS reasoning is OO. Then, why not put in the 
computer, furthermore, the particular way SS group data and functions? That is, why not put in the 
computer the objects SS use? 
If we do this the objects used by the computer in an OO approach will be the objects used by the 
intuitive reasoning of senior specialists when their reasoning refers to the Target System 24. In this 
approach the focus of the analysis becomes the reasoning of (qualified) people. Our third proposal is, 
then, that OO should reproduce in the computer the objects and methodologies of the reasoning 
of senior specialists. This leads to an unification of OO and Artificial Intelligence. With it, OO is, 
"simply", intuitive reasoning, at the most advanced stage of human intelligence development, 
put in the computer. As a matter of brevity, we are going to call AI-OO this approach. 
Although my findings about OO Logic are more than 20 years old, only in 1985 I had the opportunity 
to test them. Using a comprehension approach I developed, in the computer, systems which were 
isomorphous with systems used, at the formal level, by Seniors Specialists... In theory I was going to 
have advantages, but at the beginning I did not know which advantages could be. I obtained, among 
other things, about 90% of reusable code, a software which was friendly throughout (instead of being 
friendly only at one side of an interface, which proved to be very useful to the maintenance people) and 
great facilities to analyze, design and integrate the whole system 25. 
AI-OO is an important finding. It adds, to CO0, simplicity, meaningfulness and friendliness 
throughout. It sets criteria for objects definitions and aggregations and allows to introduce efficient, 
friendly and intelligent reasoning (software) in the computer. AI-OO has, however, an important 
practical drawback. Its implantation could require substantial changes in some contemporary IT 
(Information Technology) departments objectives and way of work. But this is another story... 
The AI-OO paradigm is a valuable evolution, it is theoretically feasible and, that way, becomes a 
challenge for everybody. We are just at the beginning of all this. The OO people began this evolution 
when they defined and implanted objects in the computer. The meaningfulness of objects is the basic 
and distinctive characteristic of human intuitive reasoning (at the most advanced stage of its 
development) and this is, precisely, what the OO people added to the computer. That way the OO 
community became a natural and qualified community to carry forward developments and 
implementations that could make AI-OO a reality. 
However, in the competitive world we live to be behind the others is not a good idea. That way, if 
quality and productivity are key factors for success, everybody should try to go AI-OO. Where began 
with? Lets study and develop your OO reasoning. It is the first step to apply it. 
some observations about this paper.- This paper does not intent to be a complete study of OO. A 
"complete" study of OO should include the logic behind OO reasoning, should study the relation that 
exists between objects and its extension and, at least, should give an example of the utilization of AI-OO 
or an example of an OO methodology. After this study, we should be able to directly reason with 
objects in a friendly way and without misunderstandings. At present this can be done. 
This paper shows only a part of a complex and broad research, which ranges from the study of the 
logic of our intuitive comprehension reasoning until the development of an OO methodology. Of 
course!, all this does not fit in a paper. As a result, some topics are not totaly developped. I remain at 
disposition of the readers of OOPS Messenger, for further explanations. 
291 The original name is "Relativistic Logic" and is 20 years old (cf. F.Figoli, "Relativistic Logic", Biblioteca Nacional, 
Montevideo, Uruguay, 1973). The name noticed that this logic studies the deduction rules that apply to "relative 
entities". In this paper we are going to study these entities. The "relative entities" were rediscovered by the OO 
People. They are the "objects" of OO. 
The name "concrete reasoning" comes from J. Piaget studies about our intelligence development. Our 
intelligence develops by steps, and "concrete reasoning" appears before "formal reasoning", which is developed at 
the last stage of our intelligence development. At concrete reasoning the basic, initial meaningful elements (in any 
reasoning and developments) are real or imaginary entities Ai, Bj .... and the reasoning remains stick to these 
entities. An important difference between concrete and formal reasoning is that concrete reasoning is done in 
extension, while formal reasoning is done in comprehension, cf. B.Inhelder-J.Piaget, "De la Iogique de I'enfant a la 
Iogique de I'adolescent", ed. Presses Universitaires de France, 1955, pp.218. 
3 Concrete reasoning has been used since Aristotle's times. According to Aristotle, "A deductive science is a 
system S of sentences, which satisfies the following postulates: (I)Any sentence belenqinq to S must refer to a 
specific domain of real entities; (tl)...", cf. E.W.Beth, "The foundations of Mathematics", ed. Harper Torch books, 
1966, pp.31. 
Contemporary logic-mathematics assumes that the reasoning is done in extension. This originated a Snow Ball 
Effect in computer science. Logic mathematics has been used as a foundation of computer practices and, as a 
result, most contemporary System Analysis and Development is done in extension. OO, by the first time, pinpoints 
to a reversion of this. 
4 Cf. S.C.Kleene, "Introduction to Metamathematics, ed. D.Van Nostrand Co. Inc., N J, 1964, p. 144. 
5 cf. J.Maritain, "El Orden de los Conceptos - Logica Formal", Ed.Ctub de Lectores, Buenos Aires, 1960, p.230. 
6 In a similar way, "French man", "American" and "Uruguayan" are subclasses of class "man". The concepts of 
"class", "superclass" and "subclass" are used by the OO people. 
7 This is one of the conclusions that follows from the finding of an error in the reasoning of the Paradoxes. The 
prove of this, which requires a revision of Godel's incompleteness theorem, is outside the limits of this paper. 
8 cf. B.Inhelder-J.Piaget, op.cit., p.223. 
9 cf. J.Maritain, op.cit., p. 233. 
10 Entity A is more abstract than entity B when _B (the comprehension of B) contains all the properties contained in 
the comprehension of A and B contains, furthermore, a property that is not contained in the comprehension of A. 
11 This is the classical Principle of Syllogism expressed with our terminology (Aristotle's "dictum de omni" 
principle: "Todo Io que se afirma universalmente de un sujeto, es afirmado de todo Io que esta contenido bajo ese 
sujeto", cf. J.Maritain, op.cit., p.236.) 
12 cf. Dave Thomas, BYTE, March 1989, p.231. 
13 MrC2 could start his reasoning from a domain of polygons P1,P2 .... Then, Polygon will be a class, instead of a 
superclass (which is MrC interpretation). 
14 P.Wegner, "Learning the Language", BYTE, March 1989, p.246. 
15 P.Wegner, op.cit., p.247. 
16 P.Wegner, op.cit., p.247, and "Concepts and Paradigms of Object-Oriented Programming, OOPS 
MESSENGER, ed. acm PRESS, August 1990. 
17 This is the standard interpretation in logic-mathematics. Cf., e.g., P.Souppes, "Introduction to LOGIC", ed. 
D.Van Nostrand Co. Inc., 1957, p.211. 
18 Let be A an object relative to, and only to, object B. Sentence "A fulfils pr if B fulfils q" means the following: 
(1)we add property q to B (the comprehension of B) and we obtain B j (_B i = B + q); (2)we consider Bj instead of B in 
the definition of A, and we will obtain a new definition which defines object A'j and, finally, (3)A'j fulfils pr. 
19 We are assuming that the deduction rule that is being used is naive intuitive reasoning. From "P prints Q copies 
plus one" and "Q is an integer smaller than 10" it does not follows that P prints 3 copies. To print 3 copies is not 
essential to P. What is essential to P is to print 3 copies when Q is number 4. 
20 In this example all the affirmations of Mr. Formal about P and T can be interpreted in extension as being 
affirmations about concrete individuals (Pi,Ti) described by P and T. As a result, an isomorphism between 
comprehension and extension affirmations exists. To each (true) affirmation at the formal level (e.g., P is at P2 
when Time=T2) a true affirmation at the concrete level exists (P is point P2 when Time=T2). This could make 
30endless the above discussion between Mr. Concrete and Mr. Formal. This isomorphism, however, does not exist 
any more when the objects are relative among themselves and, then, sometime MrC interpretations will not be 
~ossible. 
1 Lets remember that MrC needs a Domain of Values in order to be able to reason. The Domain is equivalent 
to the initial Stock of Cards of MrC and is the starting point of his reasoning. "Encapsulation" is the process MrC 
uses to form a class of cards, and "abstraction" is the process of making a card correspond to a class. 
22 cf. P.Coad/E.Yourdon, "Object-Oriented Analysis", edPrentice-HalI,N.J., 1990, pp.12. 
23 The problem of the foundation of OO is much more complex than what it seems at a first thought. Some 
authors (e.g., many logic-mathematicians) think that the use of intuitive reasoning leads to contradictions. If our 
intuitive reasoning is contradictory then OO also will be contradictory, because O 0 LS intuitive reasoning. Our 
programs will crash!. 
These authors think that way because there are some reasonings (the "Paradoxes") which were realized in 
agreement with common sense and intuitive reasoning and lead to "unexplained contradictions". A century of 
worldwide research done by very intelli,qent and competent people proved to be unable to find out an error in these 
reasoninqs!. In order to avoid the Paradoxes the authors -principally the logic-mathematicians- limited their 
studies, departed from intuitive reasoning and, that way, the logic of comprehension reasoning never was 
developed. Fortunately, OO Loqic allows to find out, in the reasoninq of the Paradoxes, an ,error recoqnizable by 
everybody (I did not published yet the demonstration of this). 
z4 The general idea is to have an isomorphism between the systems of objects at both sides of the screen. Notice 
that we are talking of senior specialists. This is because these people use systems of objects which are more 
efficient and flexible than the systems of objects used by junior specialists or by non specialists. 
25 The project, a Portfolio Control System, was developed in VS APL for an Investment Bank. 
31OBJECT ORIENTED REASONING 
We can directly reason with objects in a meaningful and simple way, but we can not use 
contemporary theories of logic in order to do this. Then, how are we going to manage to define, and to 
deal with, objects? We devised three consultations about OO reasoning and about some OO 
methodologies that follows from it. In pnnciple, they should allow you to acquire the knowledge and 
capacity needed to directly reason with objects, without misunderstandings, in a conscious and friendly 
way. 
What is OO reasoning?. OO reasoning characterizes by (1)the reasoning is done in comprehension, 
(2)it deals with relative entities (objects) and (3)it fits our intuitive reasoning of the most advanced stage 
of our intelligence development. The study of the logic of OO reasoning leads to the discovery, and 
use, of new concepts and criteria. As a result, a plain discussion with the participants is a must. 
Consultation 0t.- OO Reasoning - Basic.- Main elements and pnnciples of OO reasoning. We are 
going to give you a theoretical basis for OO reasoning and to define and discuss concepts of OO Logic 
needed to directly reason with the objects of the OO approach. The following topics are included. 
Essential, accidental, relative and withdrawn properties (different ways of "packaging .... data" and 
"functions" into objects); one-way relationships 1. Basic conditionals used at OO reasoning. Relative 
entities ("objects"). Equations, solutions, definitions and descriptions; the extension of objects 2. 
Simultaneous affirmations, the whole_and 3. Systems of objects 4. An Identity Principle and a General 
Third Excluded Principle valid for objects will be presented and discussed. 
Consultation 02.- OO Reasoning - Advanced Theory and Training (pre-requisite: Consultation 01; 
desirable pre-requisites: knowledge of logic-mathematics, Paradoxes and G6del's completeness 
theorem). We are going to alert you about misunderstandings that are very easy to be done, and we are 
going to train you in comprehension reasoning. The following topics are included. 
Basic levels of intuitive reasoning (magic, intuitive, concrete and formal, based on J.Piaget theories) 5. 
Determination of the level of the reasoning used at contemporary OO. The extension of objects relative 
among themselves. Conditioned conditionals, Fundamental Identity, Restrictive Condition. The 
"Indeterminate Value" (sometimes the lack of a described value is an instance of an object). Mixed 
reasoning. The error of the paradoxes of Berry, Richard, Cantor, B.Russell and Epimenides will be 
noticed and discussed. Diagonal reasoning and G0del's completeness theorem will be reevaluated. A 
Quantum Logic? 
The finding out of an error in the reasoning of the Paradoxes is a test which until now any theory of 
logic has passed. It is a prove of the usefulness and value of the distinctions and pnnciples of OO 
reasoning defined in OO Logic. With it, OO becomes founded. 
Consultation 03.- OO Analysis and Design (pre-requisite: course 01). This consultation is about 
methodologies patterns based on a planned and systematic use of OO reasoning. Instead of trying to 
adapt contemporary extension methodologies to OO, we are going to discuss a 100% OO approach. 
The relationship between extension and comprehension methodologies will be discussed. The following 
topics are included. 
Dimensional analysis6; multidimensional architecture 7. Human intelligence objects onentation rules 8. 
The design of an OO data base system 9. Fifth generation systems. New objectives and new works for 
IT departments lo. 
1 One way relationship is a new concept in logic. Object A can be relative to Object B, while B does not fulfils any 
relation with A. One way relations are used to define, at comprehension, databases. 
2 Broadly speaking, the extension of a system of objects is a "relational database". 
.323 The "whole_and" is a new concept in logic. Sometimes two sentences are simultaneously true, while one of 
them, considered in an atomic, isolated way is false or meaningless. We are going to use the wholeand to 
design databases. 
4 "Systems of objects" is a key concept in OO systems. 
5 Sometimes it is possible to notice, through the analyze of the level of reasoning, that an "specialist" (the person 
who gave to us his knowledge about a system to be developed at the computer) is not a "senior specialist" but a 
"junior specialist". 
6 Dimensional Analysis should be a first step in OO analysis and development. 
7 The strategic decisions about the objects to be used are consolidated into a multidimensional architecture. 
8 These Rules were already used to develop an AI-OO approach at the computer. They worked!. 
9 A comprehension criteria to define databases will be presented and discussed. 
10 The implantation, at IT departments, of OO can require substantial changes and is th_.fi great challenge. 
OOPSLA CONFERENCE PROCEEDINGS 
I EASY TO ORDER! 
OOPSLA '93 
Washington, D.C., USA, September 26 - October 1, 1993. 
Sponsored by ACM SIGPLAN. 468 pages, ISBN: 
0-89791-587-9 • Order No. 548930, Nonmembers: $39.75, 
ACM Members: $36.00 
OOPSLA '92 
Vancouver, BC, Canada, October 18-22, 1992. Sponsored 
by ACM SIGPLAN. 492 pages, ISBN: 0-89791-538-0 ° 
Order No. 548921, Nonmembers: $49.50, ACM Members: 
$36.00 
OOPSLA '92 ADDENDUM 
Vancouver, BC, Canada, October 18-22, 1992. Sponsored 
by ACM SIGPLAN. 320 pages. Published as Apdl 1993 
issue of OOPS Messenger, Vol. 4, No. 2. ISBN: 
0-89791-610-7 • Order No. 548933, Nonmembers: $46.00, 
ACM Members: $23.00 
ACM ORDER DEPARTMENT 
CAM..: 1,.800-,142-6626 (US AND CANADA) 
1-212-626-0500 (ALL OTHER COUNTRIES) 
PUEASE NAVE YOUR CREDIT CARD NUMBER HANDY 
FAX: 1-212.g44-1318 
MAIL: ACM ORDER DEPARTMENT 
P.O. BOX 12114 CHURCH STREET STATION 
NEW YORK, N.Y. 10257 OOPSLA '91 
Phoenix, AZ, October 6-11, 1991. Sponsored by ACM 
SIGPLAN. 384 pages, ISBN: 0-201-55417-8 • Order No. 
548911, Nonmembers: $35.50, ACM Members: $20.00 
OOPSLA '91 ADDENDUM 
Phoenix, AZ, October 6-11, 1991. Sponsored by ACM 
SIGPLAN. 528 pages. Published as October 1992 issue of 
OOPS Messenger, Vol. 3, No. 4. ISBN: 0-89791-544-5 • 
Order No. 548922, Nonmembers: $16.00, ACM Members: 
$8.00 
OOPSLA ]EUROPEAN CONFERENCE ON OOP '90 
Ottawa, Ontado, October 21-25, 1990. Sponsored by ACM 
SIGPLAN. 336 pages, ISBN: 0-201-52430-X • Order No. 
548901, Nonmembers: $35.50, ACM Members: $20.00 
OOPSLA '89 
New Orleans, LA, October 1-6, 1989. Sponsored by ACM 
SIGPLAN. 528 pages, ISBN: 0-201-52249-7 • Order No. 
548893, Nonmembers: $35.50, ACM Members: $28.00 
33