Light-Weight Student-Driven Workshops
for Positive Attitude Change towards
Programming in Early College∗
Wei Jin, Xin Xu, Sonal Dekhane
Information Technology
Georgia Gwinnett College
Lawrenceville, GA 30043
{wjin,xxu,sdekhane}@ggc.edu
Abstract
In Fall 2018, we observed that ~33% of early-college participants of
game-development outreach workshops became interested in taking a
programming course. In Spring 2019, a new group of near-peer tutors
developed new games and conducted new workshops in a similar fashion.
Eﬀectivenessofthespringworkshopswasalmostthesameasthatforfall.
These workshops were developed and conducted by upper-level students
in a service-learning class for participants in lower-level classes. They
were light-weight, ~75 minutes long. Early college presents a unique
opportunity for outreach, but this has not been explored adequately
in previous work. In this paper, we present analysis of the outreach
workshops’ eﬀectiveness and characteristics of the workshops that may
havecontributedtoparticipants’positiveattitudechange. Wefoundthat
the attitude change is strongly associated with participants’ gender and
declared majors, while not with their race and ethnicity. We also found
that the technologies/platforms chosen by the peer tutors and their ease
of use had an impact on the eﬀectiveness of the workshops.
1 Introduction
In an eﬀort to recruit and retain students in computing, especially those who
are under-represented, Technology Ambassadors Program (TAP) was created
∗Copyright ©2020 by the Consortium for Computing Sciences in Colleges. Permission to
copy without fee all or part of this material is granted provided that the copies are not made
or distributed for direct commercial advantage, the CCSC copyright notice and the title of
the publication and its date appear, and notice is given that copying is by permission of the
Consortium for Computing Sciences in Colleges. To copy otherwise, or to republish, requires
a fee and/or speciﬁc permission.
61on our campus. This dual-purpose program includes Information Technology
(IT) majors in a service-learning elective course. As part of the course, stu-
dents conduct outreach workshops to middle and high school girls and college
students, and in the process of achieving this, improve their own technical,
communication and leadership skills.
In an earlier paper [5], we discussed the program’s impact on the TAP stu-
dents’ conﬁdence and persistence in computing. In this paper, we attempt to
assess the impact of the outreach workshops on workshop participants, who
are usually early-college students enrolled in our general education informa-
tion literacy class. Research showed that students often have stereotypical
views of the IT discipline as being boring, solitary and lacking real-world con-
text [20]. These perceptions could be changed by diﬀerent outreach programs
[11, 13, 18, 19]. We hope that our game-based workshops conducted by peer
tutors can help students overcome these negative perceptions. Our goal is,
however, more focused due to the nature and duration of the workshops. It is
to help participants to have positive changes of attitudes towards programming
through fun and engaging activities.
Most of our workshop participants share similar characteristics. Many are
traditional incoming freshmen, recently graduated from high school. Some of
them are still undecided about their majors; some are not certain about or do
not really understand their chosen ﬁelds. Even those who have made up their
mind about their majors could still beneﬁt from knowledge of programming.
Programming skills could improve a person’s career competitiveness. For ex-
ample, coding can automate repetitive tasks in business, data analysis, arts
and design, science and engineering.
2 Related Work
We will address the related work from two perspectives: (1) the workshop au-
dience and the reason why we believe early college provides a good opportunity
for outreach, and (2) the program structure and sustainability.
2.1 Target Audience
The majority of the previously reported outreach activities targeted mid-
dle/high school students. A systematic literature review of ACM and IEEE
journals and conference proceedings from 2009-2014 shows that there are 101
relevant articles, and 82% of such eﬀorts aimed at middle/high school students
[17]. The assessment of the outreach eﬀorts usually focuses on how much stu-
dents learned in programming or developed computational thinking [1, 10, 6]
and how such eﬀorts changed their attitude/perception towards computing
(e.g. computing is fun) [9, 13, 16, 18, 19].
62The uniqueness of our work is in providing such outreach activity to early
college students. As described below, the majority of early college students do
nothaveexperiencewithprogrammingandforthosewhohadexperienceearlier
on. The impact might have waned when they reach college [15]. Researchers of
[17] also surveyed more than 700 students from three college-level institutions.
The results showed that 39.1% students reported that they had participated in
computing activities such as programming, games, hardware, robotics in their
middle/high school years, which means more than 60% of the college students
they surveyed did not have experience with such activities. This means that
there is still ample room for outreach in early college for students.
Another advantage of outreach activities targeting early-college students on
campus is that the participants will have opportunity to take immediate action
inactuallytakingaprogrammingclass. Sinceourworkshopsareusuallyoﬀered
during the last month of a semester, students have the option to enroll in a
general-education programming course or a more rigid programming course
designed for IT majors for the following semester.
2.2 Structure and Sustainability
In this subsection, we compare the structure of our program with other works.
There is a rich collection of outreach programs [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13,
14, 16, 18, 19, 20], the majority of which targeted middle/high school students.
These outreach programs were usually planned by faculty members, and the
activities were also created and led by faculty. In our case, faculty only did
the planning, but workshops and demos were developed and led by college
students. In addition, the outreach activities are a part of the curriculum of
the service-learning course. There is a set of learning objectives and outcomes
tied to outreach (e.g. communication and leadership skills). Students know
what to expect and faculty can introduce incremental improvements.
The program in [14] is most similar to ours. They have a well-organized
service-learning course, where students developed workshops and used the
workshops for outreach. The education school faculty taught students peda-
gogy and then students designed and taught workshops that introduce CS con-
cepts to high schoolers, who in the post-survey expressed increased knowledge
of computing or computational thinking and more conﬁdence about comput-
ing. The challenge they had was the recruitment of service-learning students
and eventually the service-learning course was stopped.
In comparison, our service-learning course is project-based and completely
student-driven, from choosing a game development environment, to project
ideas, to coding, to workshop content. Students are highly motivated and the
interest in the course is high. In addition, we do outreach where we are, on
campus in a general-education IT course for early-college students. Most of
63the participants recently graduated from high school, so they were similar to
the participants in [14]. The relatively low overhead in scheduling on-campus
workshops makes our eﬀorts manageable and sustainable and we can reach a
large number of participants, 150-200 students per semester.
3 Description
TechnologyAmbassadorsProgram(TAP)originallybeganin2012withfunding
from NSF sponsored STARS Computing Corps. Since its inception, the format
of the program has changed from an extracurricular program to a service-
learning course, making it more sustainable. However, the goals remain the
same. TAP is an eﬀort to broaden participation in computing, with emphasis
on both recruitment and retention of underrepresented minorities.
Since Spring 2016 the program has been oﬀered as an upper-level service
learning elective course. This format gives students course credit for partici-
pating in the program and the faculty receive teaching credit. Students apply
to the program each semester and are interviewed by two faculty teaching the
course. Up to 12 students are selected to participate in the program each
semester. The purpose of the 3-credit hour elective is to enhance the stu-
dents’ technical, communication and leadership skills. The format of the class
is highly non-traditional, putting students in the driver’s seat, while the fac-
ulty play the role of a facilitator and a mentor. Students work in teams of 3-4
and are responsible for creating an outreach game development project for a
non-computing audience. They are encouraged to use technologies and choose
ideas that would be appealing to their audience. We strive to recruit female
students into the TAP program and have at least one female student in each
team.
Each team investigates at least three technologies at the beginning of the
semester. The instructors introduce the teams to technologies used successfully
in the past. The teams can also investigate or use other technologies. Teams
present their technology choices and project ideas to the rest of the class. They
make their ﬁnal decision based on their research and feedback from peers and
instructors.
Along with the game development project, each team also creates a work-
shop that can be presented at outreach events. The workshop allows the audi-
ence to modify the existing project and/or create a similar project. The goal is
to make the audience aware of the wide array of possibilities using technology,
with the hope that the audience develops an increased awareness/interest in
programming. Before the teams conduct their workshops, they ﬁrst demon-
strate their projects to middle/high school girls at our on-campus STEM out-
reach event, Super Saturday Series, each semester. The demonstrations are
64short and allow the girls to interact with and make minor changes to the code
and see its impact on the result. This turns out to be a popular activity among
attendees.
The workshops, on the other hand, are longer and are geared towards our
early-collegepopulation. TheseworkshopsareconductedinourIntroductionto
Computing course. This is a general education course required for all students
at the college and thus has a large number of sections where the workshops
can be conducted. Our college being a majority-minority institution, this class
also oﬀers opportunities to reach out to underrepresented minorities. All sec-
tions have the same curriculum, including the same textbooks and very similar
schedules. This makes it easy to schedule the workshops towards the end of the
semester. Each team conducts their workshop in three sections of this class.
The workshop lasts ~75 minutes. At the end of the workshop, the participants
complete a survey reporting on the impact of the workshop on their interest in
programming.
4 Evaluation
The goal of the workshops is to generate positive impact on students’ atti-
tude towards programming. Therefore, besides the questions to evaluate the
workshops themselves, the survey speciﬁcally asks the participants to reﬂect
whether the workshops have caused them to reconsider taking programming
classes.
We observed in Fall 2018 that ~33% of the 204 participants said that they
either made up their mind to take a programming class or started to consider
taking a programming class due to the workshop experience. Excluding the 54
students who already planned to take a programming class before the work-
shops, the percentage of students who had positive attitude change was ~45%.
We were not sure whether it was due to the group of great service learning
students in the fall and were interested in whether the new group of service
learning students in Spring 2019 could achieve something similar and if so what
might be the reasons for the eﬀectiveness.
Table 1 contains the number of participants who responded to the surveys
and the number of students in each of the following groups for both semesters:
•Already group : students who already planned to take a programming
class before the workshop.
•Positive Attitude Change group : students who had either one of the fol-
lowing changes
–from undecided to decided to take a programming class
–from not considering to considering to take a programming class.
65•Still Not-Going-to group : students who remained convinced they would
not take a programming class after the workshop.
Table1: NumberofParticipantsandTheirAttitudeforTakingaProgramming
Class
Already
Group Positive Attitude
Change Group Still Not Going
to Group
Fall 2018 (N=204) 54 67 83
Spring 2019 (N=158) 20 59 79
Figure 1: Attitude Changes of Fall’18 and Spring’19 Workshop Participants
Figure 1 shows the comparison of Fall 2018 and Spring 2019. The two left
barclustersshowthediﬀerentpercentagesforeachgroupforthefallandspring.
The diﬀerence between the fall and spring regarding students’ original plan for
taking a programming class is outside our control. With the Already group
excluded, the two right clusters look very similar: ~45% students had a change
of attitude in the fall and ~43% in the spring. The structure of our program
may have some innate characteristics that help achieve this eﬀectiveness.
Below we will ﬁrst examine the eﬀectiveness for diﬀerent demographic
groups and then study the possible contributing factors to the workshop ef-
fectiveness. Unless noted, the Already group is excluded from the data set.
4.1 Eﬀectiveness for Demographic Groups
(1) Gender: It is a well-known fact that women are under-represented in
the IT ﬁeld, so it is not surprising that only ~13% of the women had already
66planned to take a programming class before the workshops, while over 28%
of the men had already planned so. The ratio of the female rate to the male
rate is 13/28, or ~46%. With the Already group excluded from the data set,
womenhavepositiveattitudechangeratio38%vs. 54%formen. Thediﬀerence
betweentwogendersisstatisticallysigniﬁcant(p=0.007)accordingtoFisher’s
exact test. Even though the eﬀectiveness for women is less than satisfactory,
we see some hope. The ratio of women’s attitude change rate to that of men’s
is 38/54, ~72%, 1.54 times that of the Already group ’s ratio 46%.
Figure 2: Workshop Eﬀectiveness for Diﬀerent Racial/Ethnic Groups
Figure 3: Workshop Eﬀectiveness for Diﬀerent Majors
(2) Race/Ethnicity: Figure 2 shows the attitude change ratios for major
racial/ethnic groups. As shown by the last two columns, there is almost no
diﬀerencebetweentheratiosfortheUnder-RepresentedMinoritygroup(URM)
(Black and Hispanic) and the non-URM group (Asian and White).
(3) Declared Major Figure 3 shows that students of diﬀerent majors became
interested in taking a programming class. It is interesting to see that not
all IT majors planned to take a programming class before the workshop and
there were still IT students not planning to take a programming class after
the workshop. This validates what we stated earlier that not all students
understand their majors very well. There is also a fear of programming among
67students, and some of our students delay taking the class because they do not
understand the signiﬁcance of taking this fundamental class (pre-requisite to
other classes) in a timely manner. The diﬀerence among majors is statistically
signiﬁcant (p = 0.011). The attitude change rate for IT students is very high,
around 70% and it is 57%, 50%, and 47% for undecided, STEM, and business
majorsrespectively. Studentsinthesemajorsarethosewhocouldreallybeneﬁt
from the knowledge of programming.
4.2 Factors that May Impact the Eﬀectiveness
In this subsection, we present the analysis on what factors might be the most
impactful. Each semester, there were four diﬀerent workshops designed and
delivered by four diﬀerent teams. Each workshop was normally taught three
times in three diﬀerent sections of the same general-education class. Table 2
shows the number of participants in each team’s workshops. The analysis in
this subsection is based on the data set with the Already group excluded.
Table 2: # Participants in Each Team’s Workshops
Fall 2018 Spring 2019
Team No. 12341234
Total # Participants 5135645429583833
# Participants with
Already Group Excluded 3431483722603630
Figure 4: Team Eﬀectiveness
Figure4showseachteam’seﬀectiveness. Twoteamsstoodout: theattitude
change ratio for them is ~60%, while it is 30-40% for the other teams. A team’s
eﬀectiveness can be determined by many factors and we will study each of the
factors below.
Table 3 lists seven characteristics that we thought might be relevant. Ac-
cording to data, “whether a team has URM members” has no signiﬁcant impact
68Table 3: Team/Workshop Characteristics
Characteristics Measurement
Whether a team had female 1 for yes; 0 for no
Whether a team had URM 1 for yes; 0 for no
Observed team synergy 1 for yes; 0 for no
Game development platform 2 for easy; 1 for medium; 0 for hard
Used robots or not 1 for yes; 0 for no
Related mini-game developed 1 for yes; 0 for no/unrelated mini-game
Overall workshop experience 1-5 for various measures
Figure 5: Team Gender Composition vs Attitude Change for Diﬀerent Genders
on the attitude change ratios for URM participants or non-URM participants
and “the observed team synergy by the instructors during the development
phase” does not make much diﬀerence in the workshop eﬀectiveness. Other
characteristics do seem to have some relevance and we study them below.
(1) Whether a Team Had Female Members: The participants’ attitude
change ratio for teams with female tutors and that for the one team with no
female tutors is roughly the same 43%-44%. Interestingly, however, a team’s
gender composition does seem to aﬀect attitude change ratios for female and
male students separately. The two left columns in Figure 5 show that teams
with female tutors are more eﬀective for female students than the one team
with no female tutors. The two right columns show the opposite for males:
the one team with no female tutors are more eﬀective for male students than
teams with female tutors. More data are needed to better observe the gender
factor of the peer tutors in the future.
(2) Game Development Platform: Figure 6 shows the eﬀectiveness for
teams whose chosen game development platforms were either hard, medium,
or easy for participants to start coding in. This measures whether the platform
69requirestedioussetupprocedureand/orprogramminglanguageiscomplex. We
can see that the easier the environment, the higher the attitude change ratio.
The diﬀerence is statistically signiﬁcant (p = 0.025).
Figure 6: Easiness of Game Development Platform vs Attitude Change Ratios
Figure 7: Robots Usage in Relation to the Attitude Change Ratio
(3) Robot Usage: The two left columns in Figure 7 show that workshops
that used robots had higher attitude change ratio. The diﬀerence is marginally
signiﬁcant (p = 0.079). The workshops that used robots were considered an
easy platform in Figure 6. The leftmost and rightmost columns in Figure 7
show that the workshops using robots are still more eﬀective than the rest of
the easy-platform workshops (not statistically signiﬁcant). The “cool” factor
of using robots may have helped make the workshops more engaging and thus
more eﬀective. Since only one team used robots, the number of participants
in the robot usage workshops is relatively low. We will collect more data for
robot use in the future.
(4) Relevant Mini-game Development: In addition to playing and mod-
ifying the game that the peer tutors developed and used for demo, if partic-
ipants also developed a mini-version of the game, their attitude change ratio
was higher (47% of 181 participants) than that for workshops where either no
70mini-game was developed or the mini-game developed was not related to the
demo game (38% of 107). Even though the diﬀerence is not statistically signif-
icant (p = 0.177), this interesting observation gives us signiﬁcant insights for
future eﬀorts.
(5) Overall Workshop Experience: Not surprisingly, how well a workshop
was conducted is statistically signiﬁcantly related to the attitude change:
•Overall workshop experience (with ratings 1-5) (p=0.002)
•Presentation engagement (with ratings 1-5) (p=0.002)
•Whether learned something new (yes or no) (p = 0.037)
5 Conclusion and Future Work
We are very encouraged by what the data say about our outreach program
for early college students. The workshops are equally eﬀective for under-
represented racial/ethnic minorities and the non-under-represented groups.
Even though the eﬀectiveness for female students is lower than that for male,
the ratio of female’s attitude change rate (with the Already group excluded) vs
male’s is much higher than the female to male ratio among students who have
already planned to take a programming class.
We also identiﬁed factors that are most likely to have an impact on how
eﬀective a workshop is. The most prominent factor is the game development
platform. If it is simple to setup and code in, the workshops have higher
eﬀectiveness. Using robots and developing mini-versions of the games that are
used in the demo are also likely to have a positive impact. Even though more
data is needed, this is nonetheless very valuable for our future research.
We want to understand more about the gender factor for both the peer
tutors and the participants. In addition, we believe that near-peer mentoring
is a big motivating factor and we plan to study this in more depth. Last, we
will track how many of the participants who had positive attitude change will
actually enroll in and complete a programming course.
References
[1] Karen Brennan and Mitchel Resnick. New frameworks for studying and
assessingthedevelopmentofcomputationalthinking. In Proceedings of the
2012 Annual Meeting of the American Educational Research Association ,
Vol. 1, 2012.
[2] Orpheus Crutchﬁeld, Christopher Harrison, Guy Haas, Daniel García,
Sheila Humphreys, Colleen Lewis, and Peter Khooshabeh. Berkeley foun-
71dation for opportunities in information technology: A decade of broaden-
ing participation. ACM Transactions on Computing Education , 11:15, 10
2011.
[3] T.Dahlberg,T.Barnes,K.Buch,andA.Rorrer. Thestarsalliance: Viable
strategies for broadening participation in computing. ACM Transactions
on Computing Education , 11(3):18, 2011.
[4] A. Decker and M. McGill. Pre-college computing outreach research: To-
wards improving the practice. In Proceedings of the 48th SIGCSE Tech-
nical Symposium on Computer Science Education , pages 153–158. ACM,
2017.
[5] S. Dekhane, X. Xu, N. Napier, R. Barakat, C. Gunay, and K. Nagel. Tech-
nology focused service-learning course to increase conﬁdence and persis-
tenceincomputing. Journal of Computing Sciences in Colleges ,34(2):147–
153, 2018.
[6] P. Doerschuk, J. Liu, and J. Mann. Inspired high school computing
academies. ACM Transactions on Computing Education , 11(2), 2011.
[7] Peggy Doerschuk, Jiangjiang Lius, and Judith Mann. Inspired broadening
participationincomputing: Mostsuccessfulstrategiesandlessonslearned.
InIEEE Frontiers in Education Conference (FIE) . IEEE, 2010.
[8] M.A.L. Egan and T. Lederman. The impact of impact: assessing students’
perceptions after a day of computer exploration. In Proceedings of the
16th Annual Joint Conference on Innovation and Technology in Computer
Science Education , pages 318–322. ACM, 2011.
[9] Brendan Tangney et al. Pedagogy and processes for a computer program-
ming outreach workshop—the bridge to college model. IEEE Transactions
on Education , 53(1):53–60, 2009.
[10] DianaFranklinetal. Assessmentofcomputersciencelearninginascratch-
based outreach program. In Proceedings of the 44th Technical Symposium
on Computer Science Education . ACM, 2013.
[11] S. Grover, R. Pea, and S. Cooper. Remedying misperceptions of computer
science among middle schoolstudents. In Proceedings of the 45th SIGCSE
Technical Symposium on Computer Science Education , 2014.
[12] M. Guzdial, B. Ericson, T. Mcklin, and S. Engelman. Georgia computes!
an intervention in a us state, with formal and informal education in a
policy context. ACM Transactions on Computing Education , 14(2):13,
2014.
72[13] A. Harriger, A.J. Magana, and R. Lovan. Identifying the impact of the
spirit program in student knowledge, attitudes, and perceptions toward
computing careers. In Frontiers in Education Conference , 2012.
[14] Yasmin Kafai, Jean Griﬃn, and et. al. A cascading mentoring pedagogy
in a cs service learning course to broaden participation and perceptions.
InProceedings of the 44th SIGCSE Technical Symposium on Computer
Science Education , pages 101–106. ACM, 2013.
[15] Chad Mano, Vicki Allan, and Donald Cooley. Eﬀective in-class activities
for middle school outreach programs. In IEEE Frontiers in Education
Conference (FIE) . IEEE, 2010.
[16] G. Marcu, S.J. Kaufman, J.K. Lee, and et al. Design and evaluation of a
computer science and engineering course for middle school girls. In Pro-
ceedings of the 41st SIGCSE Technical Symposium on Computer Science
Education , pages 234–238, 2010.
[17] Monica McGill, Adrienne Decker, and Amber Settle. Undergraduate stu-
dents’ perceptions of the impact of pre-college computing activities on
choices of major. ACM Transactions on Computing Education , 16(4),
2016.
[18] J. Robertson. The inﬂuence of a game-making project on male and female
learners’ attitudes to computing. Computer Science Education , 23(1):58–
83, 2013.
[19] R. Taub, M. Armoni, and M. Ben-Ari. CS unplugged and middle-school
students’ views, attitudes, and intentions regarding CS. ACM Transac-
tions on Computing Education , 12(2), 2012.
[20] S. Yardi and A. Bruckman. What is computing?: bridging the gap be-
tween teenagers’ perceptions and graduate students’ experiences. In Pro-
ceedings of the 3rd International Workshop on Computing Education Re-
search, pages 39–50. ACM, 2007.
73